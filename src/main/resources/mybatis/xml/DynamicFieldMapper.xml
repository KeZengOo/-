<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuoxin.virtual.rep.api.mybatis.DynamicFieldMapper">


    <select id="getList" resultType="com.nuoxin.virtual.rep.api.web.controller.response.customer.DoctorDynamicFieldResponseBean">
        select vddf.id, vddf.field_name name, vddf.alias, vddf.type, vddf.field_value value, vddf.classification
        from virtual_doctor_dynamic_field vddf where vddf.flag = 1
    </select>


    <!--
    <select id="getDoctorBasicInfo" parameterType="java.lang.Long"
            resultType="com.nuoxin.virtual.rep.api.web.controller.response.doctor.DoctorBasicInfoResponseBean">

        select distinct vddf.type,vddf.id fieldId,vddf.field_name field,vddf.field_value fieldValue, vddfv.dynamic_field_value value,vddfv.id ddfvId, vddf.classification from
        virtual_doctor_dynamic_field vddf
        inner join virtual_doctor_dynamic_field_value vddfv
        on vddf.id=vddfv.dynamic_field_id
        where vddfv.doctor_id=#{doctorId}




    </select>
    -->


    <select id="getDoctorBasicInfo" parameterType="java.lang.Long"
            resultType="com.nuoxin.virtual.rep.api.web.controller.response.doctor.DoctorBasicInfoResponseBean">

        <!--
        select distinct vddf.type,vddf.id fieldId,vddf.field_name field,vddf.field_value fieldValue, vddfv.dynamic_field_value value,vddfv.id ddfvId, vddf.classification from
        virtual_doctor_dynamic_field vddf
        inner join virtual_doctor_dynamic_field_value vddfv
        on vddf.id=vddfv.dynamic_field_id
        where vddfv.doctor_id=#{doctorId}
        -->

        select vddf.type, vddf.id fieldId, vddf.field_name field,
        vddf.field_value fieldValue,
        vddf.classification,
        vddf.flag
        from virtual_doctor_dynamic_field vddf order by vddf.flag,vddf.classification




    </select>


    <select id="getHcpBasicInfoHistoryList" parameterType="com.nuoxin.virtual.rep.api.web.controller.response.hcp.HcpDynamicRequestBean"
            resultType="com.nuoxin.virtual.rep.api.web.controller.response.hcp.HcpBasicInfoHistoryResponseBean">

        select h.dynamic_field_name fieldName, h.dynamic_field_value fieldValue,(select name from drug_user where id=h.drug_user_id) drugUserName,
        h.correct,
        h.old_dynamic_field_name oldFieldName,
        h.old_dynamic_field_value oldFieldValue,
        date_format(h.update_time,'%Y-%m-%d %H:%i:%s') updateTime
        from virtual_doctor_dynamic_field_value_history h where h.doctor_id=#{doctorId} and h.dynamic_field_name = #{name}
        and h.drug_user_id in (
        select id from drug_user du where du.leader_path like (select concat(leader_path,'%') from drug_user where id=h.drug_user_id)
        )

        order by h.update_time desc
    </select>



    <select id="getDoctorBasicInfoValue"
            resultType="com.nuoxin.virtual.rep.api.web.controller.response.doctor.DoctorBasicInfoResponseBean">

        select vddfv.dynamic_field_value value,vddfv.id ddfvId from virtual_doctor_dynamic_field_value vddfv
        where vddfv.doctor_id=#{doctorId} and vddfv.dynamic_field_id=#{fieldId} limit 1


    </select>




    <select id="getFixedField" resultType="com.nuoxin.virtual.rep.api.web.controller.response.doctor.DoctorBasicInfoResponseBean">

        select vddf.type, vddf.id fieldId, vddf.field_name field,
        vddf.field_value fieldValue,
        vddf.classification,
        vddf.flag
        from virtual_doctor_dynamic_field vddf where flag=0

    </select>


    <select id="getFieldByDoctorIdAndClassification" resultType="com.nuoxin.virtual.rep.api.web.controller.response.doctor.DoctorBasicInfoResponseBean">

        select distinct vddfv.dynamic_field_id fieldId, vddfv.dynamic_field_name field, vddfv.dynamic_field_value value from virtual_doctor_dynamic_field_value vddfv
        inner join virtual_doctor_dynamic_field vddf
        on vddfv.dynamic_field_id=vddf.id
        where vddf.classification=#{classification}
        and vddfv.doctor_id=#{doctorId}

    </select>



    <delete id="deleteAllByDoctorIdAndClassification">

        delete from virtual_doctor_dynamic_field_value where doctor_id=#{doctorId}
        and dynamic_field_id in
        (select id from virtual_doctor_dynamic_field where classification=#{classification})

    </delete>


    <insert id="insertHcpBasicField" useGeneratedKeys="true" keyProperty="id" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.hcp.HcpBasicFieldRequestBean">
        insert into virtual_doctor_dynamic_field_value(doctor_id, dynamic_field_id, dynamic_field_name,dynamic_field_value)
        values (#{doctorId}, #{fieldId}, #{key}, #{value})
    </insert>

    <insert id="insertHcpBasicFieldHistory" useGeneratedKeys="true" keyProperty="id" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.hcp.HcpBasicFieldRequestBean">
        insert into virtual_doctor_dynamic_field_value_history(ddfv_id,doctor_id,drug_user_id, dynamic_field_id, dynamic_field_name,dynamic_field_value,old_dynamic_field_id, old_dynamic_field_name,old_dynamic_field_value, correct)
        values (#{ddfvId},#{doctorId},#{drugUserId}, #{fieldId}, #{key}, #{value},#{oldFieldId}, #{oldKey}, #{oldValue}, #{correct})
    </insert>

    <!-- 返回医生基本信息和医院新增的动态字段的 1是医生基本信息，5是医院信息,2是处方信息3是拜访记录-->
    <select id="getDoctorDynamicFieldList" resultType="com.nuoxin.virtual.rep.api.web.controller.response.customer.DoctorDynamicFieldResponseBean">

        SELECT
            id,
            serial_number serialNumber,
            field_name `name`,
            `type`,
            field_value `value`,
            required,
            classification
        FROM
            virtual_doctor_dynamic_field
        WHERE 1=1

        <if test="productId !=null and productId !=0">
            and product_id=#{productId}
            and classification IN (2, 3)
        </if>

        <if test="productId==null or productId==0">
            and classification IN (1, 5)
        </if>

        ORDER BY
            classification ASC,
            id ASC
    </select>

    <!-- 客户设置医生动态字段修改 -->
    <select id="updateDoctorDynamicField" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.v2_5.set.DoctorDynamicFieldRequestBean">

        update virtual_doctor_dynamic_field
        <set>
            <if test="serialNumber !=null and serialNumber !=0">
                serial_number=#{serialNumber},
            </if>

            <if test="name != null and name !=''">
                field_name=#{name},
            </if>

            <if test="type!=null and type!=0">
                type=#{type},
            </if>

            <if test="value !=null and value!=''">
                field_value=#{value},
            </if>

            <if test="required !=null">
                required=#{required},
            </if>

            <if test="classification !=null and classification !=0">
                classification=#{classification},
            </if>

            <if test="menderId !=null and menderId !=0">
                mender_id=#{menderId},
            </if>

            <if test="menderName !=null and menderName !=''">
                mender_name=#{menderName}
            </if>
        </set>

        where id=#{id}

    </select>

    <delete id="deleteDoctorDynamicField">
        delete from virtual_doctor_dynamic_field
        where id=#{id}
    </delete>

    <insert id="insertDoctorDynamicField" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.v2_5.set.DoctorDynamicFieldRequestBean" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into virtual_doctor_dynamic_field(serial_number, field_name, type, field_value, classification, required, product_id, creator_id, creator_name, mender_id, mender_name)
        values
        (#{serialNumber}, #{name}, #{type}, #{value}, #{classification}, #{required}, #{productId}, #{creatorId}, #{creatorName}, #{menderId}, #{menderName})
    </insert>

    <!-- 得到医生基本信息动态字段填充的值 -->
    <select id="getDoctorBasicDynamicFieldValue" resultType="com.nuoxin.virtual.rep.api.web.controller.response.v2_5.DoctorBasicDynamicFieldValueResponseBean">
        SELECT
            t.*, t2.dynamic_field_value dynamicFieldValue,
            t2.dynamic_extend_value dymaicExtendValue
        FROM
            (
                SELECT
                    vddf.id dynamicFieldId,
                    vddf.field_name dynamicFieldName,
                    vddf.field_value dynamicFieldSelectValue,
                    vddf.required,
                    vddf.classification
                FROM
                    virtual_doctor_dynamic_field vddf
                WHERE
                    classification=#{classification}
            ) t
        LEFT JOIN virtual_doctor_dynamic_field_value t2 ON t.dynamicFieldId = t2.dynamic_field_id
        WHERE
            t2.doctor_id = #{doctorId}
        ORDER BY
            t.dynamicFieldId ASC
    </select>

    <!-- 得到医生产品信息动态字段填充的值 -->
    <select id="getDoctorProductDynamicFieldValue" resultType="com.nuoxin.virtual.rep.api.web.controller.response.v2_5.DoctorProductDynamicFieldValueResponseBean">
        SELECT
            t.*, t2.dynamic_field_value dynamicFieldValue,
            t2.dynamic_extend_value dymaicExtendValue
        FROM
            (
                SELECT DISTINCT
                    vddf.id dynamicFieldId,
                    vddf.field_name dynamicFieldName,
                    vddf.field_value dynamicFieldSelectValue,
                    vddf.required,
                    vddf.classification
                FROM
                    virtual_doctor_dynamic_field vddf

                WHERE
                    vddf.product_id=#{productId}
                    and classification IN (2, 3)
            ) t
        LEFT JOIN virtual_doctor_dynamic_field_value t2 ON t.dynamicFieldId = t2.dynamic_field_id
        WHERE
            t2.doctor_id = #{doctorId}
        ORDER BY
            t.classification ASC,
            t.dynamicFieldId ASC
    </select>


    <insert id="addDoctorBasicDynamicFieldValue">
        INSERT INTO
        virtual_doctor_dynamic_field_value(doctorId, dynamic_field_id, dynamic_field_name, dynamic_field_value,dynamic_extend_value)
        VALUES
        <foreach collection="list" item="d" separator=",">
            (#{doctorId}, #{d.dynamicFieldId}, #{d.dynamicFieldName}, #{d.dynamicFieldValue}, #{dynamicExtendValue})
        </foreach>

    </insert>

    <delete id="deleteDoctorDynamicFieldValue">
        DELETE
        FROM
            virtual_doctor_dynamic_field_value
        WHERE
            doctor_id = #{doctorId}
        AND dynamic_field_id IN (
            SELECT
                id
            FROM
                virtual_doctor_dynamic_field
            WHERE
                classification = #{classification}
        )
    </delete>


    <!-- 找出填的字段中的必填字段 -->
    <select id="getRequiredFieldId" resultType="java.lang.Long">
        SELECT id
        FROM virtual_doctor_dynamic_field_value
        WHERE required=1
        AND id IN
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>

    </select>

</mapper>