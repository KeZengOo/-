<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuoxin.virtual.rep.api.mybatis.CoverageReportMapper">

	<!-- 根据产品id查询招募医生和医院数据 -->
	<select id="getRecruitCount" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		SELECT count(distinct d.id) hcpId,count(distinct h.id) hciId
		FROM virtual_doctor_call_info v
		INNER JOIN doctor d ON v.virtual_doctor_id = d.id
		INNER JOIN virtual_doctor_call_info_mend m ON v.id=m.call_id
		INNER JOIN hospital h on h.id = d.hospital_id
		WHERE v.product_id = #{productId} AND m.is_recruit = 1
	</select>

	<!-- 根据产品id和时间段查询招募医生和医院数据 -->
    <select id="findRecruitList" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		SELECT
		d.id hcpId,h.id hciId,DATE_FORMAT(m.create_time,'%Y-%m') timeStr
		FROM
		virtual_doctor_call_info v
		INNER JOIN doctor d ON v.virtual_doctor_id = d.id
		INNER JOIN virtual_doctor_call_info_mend m ON v.id=m.call_id
		INNER JOIN hospital h on h.id = d.hospital_id
		WHERE v.product_id = #{productId} AND m.is_recruit= 1
		AND DATE_FORMAT(m.create_time, '%Y-%m') &lt;= #{endTime}
		GROUP BY d.id, m.create_time
    </select>

	<!-- 根据产品id和时间段查询覆盖医生和医院数据 -->
	<select id="findCoverageList" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		-- 电话覆盖 拜访登记覆盖
		SELECT DISTINCT d.id hcpId, h.id hciId, DATE_FORMAT(b.create_time,'%Y-%m') timeStr FROM `virtual_doctor_call_info` a
		INNER JOIN doctor d ON a.virtual_doctor_id = d.id
		INNER JOIN virtual_doctor_call_info_mend b on a.id = b.call_id
		INNER JOIN hospital h on h.id = d.hospital_id
		WHERE b.is_recruit = 1 AND a.product_id = #{productId} AND (a.status_name = 'answer' or a.visit_channel != 1)
		AND DATE_FORMAT(a.create_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(a.create_time,'%Y-%m') &lt;= #{endTime}
		UNION
		-- 文章阅读
		SELECT DISTINCT d.id hcpId, h.id hciId, DATE_FORMAT(r.create_time,'%Y-%m') timeStr FROM
		t_content_product a
		INNER JOIN activity_read r ON r.data_id = a.content_id
		INNER JOIN doctor d ON r.read_person_id = d.id
		INNER JOIN hospital h on h.id = d.hospital_id
		LEFT JOIN activity_read_ip i ON i.read_token = r.read_token
		WHERE a.product_id = #{productId}
		AND DATE_FORMAT(r.create_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(r.create_time,'%Y-%m') &lt;= #{endTime}
		AND (i.isp != '阿里云' OR i.isp IS NULL) AND d.id IN (
		<include refid="recruitHcp"/>
		AND pd.product_id = #{productId}
		)
		UNION
		-- 微信回复
		SELECT DISTINCT d.id doctorId, h.id userId, DATE_FORMAT(b.message_time,'%Y-%m') total FROM product_user a
		JOIN `virtual_message` b ON a.user_id = b.drug_user_id
		JOIN doctor d ON b.doctor_id = d.id
		JOIN hospital h on h.id = d.hospital_id
		WHERE a.prod_id = #{productId} AND b.user_type = 2
		and DATE_FORMAT(b.message_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(b.message_time,'%Y-%m') &lt;= #{endTime}
		AND b.wechat_message_type NOT IN ('系统消息','撤回提醒') AND d.id IN (
		<include refid="recruitHcp"/>
		AND pd.product_id = #{productId}
		)
		UNION
		-- 会议覆盖
		SELECT DISTINCT d.id doctorId, h.id userId, DATE_FORMAT(b.attend_start_time,'%Y-%m') total FROM
		t_meeting_data a
		INNER JOIN t_meeting_attend_details b ON a.id = b.meeting_id
		INNER JOIN virtual_doctor_call_info_mend pd on a.product_id = pd.product_id and b.doctor_id = pd.virtual_doctor_id
		INNER JOIN doctor d ON b.doctor_id = d.id
		INNER JOIN hospital h on h.id = d.hospital_id
		WHERE pd.is_recruit = 1 AND a.product_id = #{productId}
		AND DATE_FORMAT(b.attend_start_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(b.attend_start_time,'%Y-%m') &lt;= #{endTime}
	</select>

	<!-- 根据产品id和时间段查询招募医生 -->
	<select id="findCoverageRecruitList" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		SELECT
		d.id hcpId,DATE_FORMAT(m.create_time,'%Y-%m') timeStr
		FROM
		virtual_doctor_call_info v
		INNER JOIN doctor d ON v.virtual_doctor_id = d.id
		INNER JOIN virtual_doctor_call_info_mend m ON v.id=m.call_id
		WHERE v.product_id = #{productId} AND m.is_recruit= 1
		AND DATE_FORMAT(m.create_time, '%Y-%m') &lt;= #{endTime}
		GROUP BY d.id, m.create_time
	</select>

	<!-- 电话覆盖 -->
	<select id="findCoverageCallList" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		-- 电话覆盖
		SELECT d.id hcpId, a.call_time hciId, DATE_FORMAT(b.create_time,'%Y-%m') timeStr FROM `virtual_doctor_call_info` a
		INNER JOIN doctor d ON a.virtual_doctor_id = d.id
		INNER JOIN virtual_doctor_call_info_mend b on a.id = b.call_id
		WHERE b.is_recruit = 1 AND a.product_id = #{productId} AND a.status_name = 'answer' AND a.visit_channel = 1
		AND DATE_FORMAT(a.create_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(a.create_time,'%Y-%m') &lt;= #{endTime}
	</select>

	<!-- 微信覆盖 回复数、覆盖医生人数 -->
	<select id="findCoverageWeChatList" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		SELECT d.id hcpId, DATE_FORMAT(b.message_time,'%Y-%m') timeStr FROM product_user a
		JOIN `virtual_message` b ON a.user_id = b.drug_user_id
		JOIN doctor d ON b.doctor_id = d.id
		WHERE a.prod_id = #{productId} AND b.user_type = 2
		and DATE_FORMAT(b.message_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(b.message_time,'%Y-%m') &lt;= #{endTime}
		AND b.wechat_message_type NOT IN ('系统消息','撤回提醒') AND d.id IN (
		<include refid="recruitHcp"/>
		AND pd.product_id = #{productId}
		)
	</select>

	<!-- 微信覆盖 发送次数统计 -->
	<select id="findCoverageWeChatSend" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		SELECT d.id hcpId, DATE_FORMAT(b.message_time,'%Y-%m') timeStr FROM product_user a
		JOIN `virtual_message` b ON a.user_id = b.drug_user_id
		JOIN doctor d ON b.doctor_id = d.id
		WHERE a.prod_id = #{productId} AND b.user_type = 1
		and DATE_FORMAT(b.message_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(b.message_time,'%Y-%m') &lt;= #{endTime}
		AND b.wechat_message_type NOT IN ('系统消息','撤回提醒') AND d.id IN (
		<include refid="recruitHcp"/>
		AND pd.product_id = #{productId}
		)
	</select>

	<!-- 会议覆盖 医生和次数 -->
	<select id="findCoverageMeetingList" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		SELECT d.id hcpId, UNIX_TIMESTAMP(b.attend_end_time) - UNIX_TIMESTAMP(b.attend_start_time) hciId, DATE_FORMAT(b.attend_start_time,'%Y-%m') timeStr FROM
		t_meeting_data a
		INNER JOIN t_meeting_attend_details b ON a.id = b.meeting_id
		INNER JOIN virtual_doctor_call_info_mend pd on a.product_id = pd.product_id and b.doctor_id = pd.virtual_doctor_id
		INNER JOIN doctor d ON b.doctor_id = d.id
		WHERE pd.is_recruit = 1 AND a.product_id = #{productId}
		AND DATE_FORMAT(b.attend_start_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(b.attend_start_time,'%Y-%m') &lt;= #{endTime}
		GROUP BY d.id, b.id
	</select>

	<!-- 会议覆盖 会议数量 -->
	<select id="findCoverageMeeting" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		SELECT DATE_FORMAT(a.start_time,'%Y-%m') timeStr, count(a.id) hciId FROM
		t_meeting_data a
		WHERE a.product_id = #{productId}
		AND DATE_FORMAT(a.start_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(a.start_time,'%Y-%m') &lt;= #{endTime}
		GROUP BY timeStr
	</select>

	<!-- 内容覆盖 阅读数据 -->
	<select id="findCoverageReadList" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		SELECT DISTINCT d.id hcpId, DATE_FORMAT(r.create_time,'%Y-%m') timeStr FROM
		t_content_product a
		INNER JOIN activity_read r ON r.data_id = a.content_id
		INNER JOIN doctor d ON r.read_person_id = d.id
		LEFT JOIN activity_read_ip i ON i.read_token = r.read_token
		WHERE a.product_id = #{productId}
		AND DATE_FORMAT(r.create_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(r.create_time,'%Y-%m') &lt;= #{endTime}
		AND (i.isp != '阿里云' OR i.isp IS NULL) AND d.id IN (
		<include refid="recruitHcp"/> AND pd.product_id = #{productId}
		AND DATE_FORMAT(pd.create_time,'%Y-%m') &lt;= #{endTime}
		)
		UNION
		select DISTINCT d.id hcpId, DATE_FORMAT(b.create_time,'%Y-%m') timeStr FROM
		t_content_product a
		INNER JOIN wx_user_read b ON b.content_id = a.content_id
		INNER JOIN wx_users c on b.user_id = c.id
		INNER JOIN doctor d ON c.doctor_id = d.id
		WHERE a.product_id = #{productId}
		AND DATE_FORMAT(b.create_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(b.create_time,'%Y-%m') &lt;= #{endTime}
		AND d.id IN (
		<include refid="recruitHcp"/> AND pd.product_id = #{productId}
		AND DATE_FORMAT(pd.create_time,'%Y-%m') &lt;= #{endTime}
		)
	</select>

	<!-- 内容覆盖 发送数据 -->
	<select id="findCoverageSendList" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		select DISTINCT d.id hcpId, DATE_FORMAT(b.create_time,'%Y-%m') timeStr from
		t_content_product a
		inner join activity_share b on a.content_id = b.data_id
		inner join doctor d on b.share_person_id = d.id
		WHERE
		a.product_id = #{productId}
		AND DATE_FORMAT(b.create_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(b.create_time,'%Y-%m') &lt;= #{endTime}
		AND d.id IN (
		<include refid="recruitHcp"/>
		AND pd.product_id = #{productId} AND date_format(pd.create_time, '%Y-%m') &lt;= #{endTime}
		)
		union
		select DISTINCT d.id hcpId, DATE_FORMAT(b.create_time,'%Y-%m') timeStr from
		product_user a
		inner join virtual_message b on a.user_id = b.drug_user_id
		inner join doctor d on b.doctor_id = d.id
		WHERE a.prod_id = #{productId} and b.user_type = 1 and (b.wechat_message_type
		in ('链接/小程序/聊天记录', '网页') or (b.message like 'http%' and b.message like '%token=%'))
		AND DATE_FORMAT(b.message_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(b.message_time,'%Y-%m') &lt;= #{endTime}
		AND d.id IN (
		<include refid="recruitHcp"/>
		AND pd.product_id = #{productId} AND date_format(pd.create_time, '%Y-%m') &lt;= #{endTime}
		)
	</select>

	<!-- 患者量覆盖 招募医生 -->
	<select id="findCoveragePatientRecruitList" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		SELECT
		IFNULL(vb.dynamic_field_value,'未知') timeStr,
		count( DISTINCT d.id ) hcpId
		FROM
		doctor d
		INNER JOIN virtual_doctor_call_info_mend b ON d.id = b.virtual_doctor_id
		INNER JOIN virtual_doctor_dynamic_field va ON b.product_id = va.product_id
		LEFT JOIN virtual_doctor_dynamic_field_value vb ON va.id = vb.dynamic_field_id
		AND vb.doctor_id = b.virtual_doctor_id
		WHERE
		b.is_recruit = 1
		AND b.product_id = #{productId}
		AND va.field_name = '目标患者量/月'
		AND DATE_FORMAT( b.create_time, '%Y-%m' ) &lt;= #{endTime}
		GROUP BY
		timeStr
	</select>

	<!-- 患者量覆盖 覆盖医生 -->
	<select id="findCoveragePatientList" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		select a.timeStr, count(DISTINCT a.hcpId) hcpId, count(1) hciId from
		(
		-- 电话覆盖 拜访登记覆盖
		SELECT vb.doctor_id hcpId, vb.dynamic_field_value timeStr FROM
		`virtual_doctor_call_info` a
		INNER JOIN virtual_doctor_call_info_mend b on a.id = b.call_id
		inner join virtual_doctor_dynamic_field va on b.product_id = va.product_id
		inner join virtual_doctor_dynamic_field_value vb on va.id = vb.dynamic_field_id and vb.doctor_id = b.virtual_doctor_id
		INNER JOIN doctor d ON d.id = vb.doctor_id
		WHERE b.is_recruit = 1 AND a.product_id = #{productId} AND (a.status_name = 'answer' or a.visit_channel != 1)
		and va.field_name = '目标患者量/月'
		AND DATE_FORMAT(a.create_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(a.create_time,'%Y-%m') &lt;= #{endTime}
		GROUP BY a.id
		UNION all
		-- 文章阅读
		SELECT r.read_person_id hcpId, vb.dynamic_field_value timeStr FROM
		virtual_doctor_dynamic_field va
		inner join virtual_doctor_dynamic_field_value vb on va.id = vb.dynamic_field_id
		INNER JOIN activity_read r ON vb.doctor_id = r.read_person_id
		LEFT JOIN activity_read_ip i ON i.read_token = r.read_token
		INNER JOIN doctor d ON d.id = vb.doctor_id
		WHERE va.product_id = #{productId} and va.field_name = '目标患者量/月'
		AND DATE_FORMAT(r.create_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(r.create_time,'%Y-%m') &lt;= #{endTime}
		AND (i.isp != '阿里云' OR i.isp IS NULL) AND r.read_person_id IN (
		<include refid="recruitHcp"/>
		AND pd.product_id = #{productId} AND date_format(pd.create_time, '%Y-%m') &lt;= #{endTime}
		)
		GROUP BY r.id
		UNION all
		-- 微信回复
		SELECT b.doctor_id hcpId, vb.dynamic_field_value timeStr FROM virtual_doctor_dynamic_field va
		inner join virtual_doctor_dynamic_field_value vb on va.id = vb.dynamic_field_id
		inner JOIN `virtual_message` b ON vb.doctor_id = b.doctor_id
		INNER JOIN doctor d ON d.id = vb.doctor_id
		WHERE va.product_id = #{productId} AND b.user_type = 2 and va.field_name = '目标患者量/月'
		and DATE_FORMAT(b.message_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(b.message_time,'%Y-%m') &lt;= #{endTime}
		AND b.wechat_message_type NOT IN ('系统消息','撤回提醒') AND b.doctor_id IN (
		<include refid="recruitHcp"/>
		AND pd.product_id = #{productId} AND date_format(pd.create_time, '%Y-%m') &lt;= #{endTime}
		)
		GROUP BY b.id
		UNION all
		-- 会议覆盖
		SELECT b.doctor_id hcpId, vb.dynamic_field_value timeStr FROM
		virtual_doctor_dynamic_field va
		inner join virtual_doctor_dynamic_field_value vb on va.id = vb.dynamic_field_id
		INNER JOIN t_meeting_attend_details b ON b.doctor_id = vb.doctor_id
		INNER JOIN doctor d ON d.id = vb.doctor_id
		WHERE va.product_id = #{productId} and va.field_name = '目标患者量/月'
		AND DATE_FORMAT(b.attend_start_time,'%Y-%m') &gt;= #{startTime} AND DATE_FORMAT(b.attend_start_time,'%Y-%m') &lt;= #{endTime}
		AND b.doctor_id IN (
		<include refid="recruitHcp"/>
		AND pd.product_id = #{productId} AND date_format(pd.create_time, '%Y-%m') &lt;= #{endTime}
		)
		GROUP BY b.id
		) a GROUP BY a.timeStr
	</select>

	<select id="getFieldValueByProductId"  resultType="com.nuoxin.virtual.rep.api.entity.v3_0.CoverageReportPart">
		select field_value timeStr from virtual_doctor_dynamic_field where product_id = #{productId} and field_name = '目标患者量/月'
	</select>

	<sql id="recruitHcp">
		SELECT DISTINCT
		pd.virtual_doctor_id
		FROM
		virtual_doctor_call_info_mend pd
		WHERE pd.is_recruit = 1 AND pd.virtual_doctor_id > 0
	</sql>

</mapper>