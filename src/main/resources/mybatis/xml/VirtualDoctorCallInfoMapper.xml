<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuoxin.virtual.rep.api.mybatis.VirtualDoctorCallInfoMapper">

	<select id="getCallVisitCount" resultType="java.lang.Integer">
		SELECT 
			count(*)
		FROM virtual_doctor_call_info v
		JOIN (
			SELECT 
				DISTINCT d.id  
			FROM drug_user_doctor dud
			JOIN doctor d
			ON d.id=dud.doctor_id
			JOIN  drug_user du
			ON dud.drug_user_id=du.id
			AND dud.doctor_id = #{virtualDoctorId}
			AND du.leader_path LIKE CONCAT(#{leaderPath},'%')
			AND dud.is_available=1
		) temp 
		ON v.virtual_doctor_id=temp.id
	    WHERE v.product_id IN (
	    	SELECT DISTINCT prod_id 
	    	FROM product_user pu
	    	JOIN drug_user du
	    	ON pu.user_id=du.id
	    	WHERE du.leader_path LIKE CONCAT(#{leaderPath},'%')
	    )
	</select>
	
	<select id="getCallVisitList" resultType="com.nuoxin.virtual.rep.api.entity.v2_5.CallVisitBean">
		SELECT 
			v.id AS callId, call_time AS callTime, status_name AS statusName, call_url AS callUrl, v.type,
			date_format(v.create_time, '%Y-%m-%d %H:%i:%S') AS createTime,
			remark,du.name AS drugUserName 
		FROM virtual_doctor_call_info v
		<!-- START  -->
		JOIN drug_user du
		ON v.virtual_drug_user_id = du.id
		JOIN (
			SELECT 
				DISTINCT d.id  
			FROM drug_user_doctor dud
			JOIN doctor d
			ON d.id=dud.doctor_id
			JOIN  drug_user du
			ON dud.drug_user_id=du.id
			AND dud.doctor_id = #{virtualDoctorId}
			AND du.leader_path LIKE CONCAT(#{leaderPath},'%')
			AND dud.is_available=1
		) temp 
		ON v.virtual_doctor_id=temp.id
		<!-- END -->
	    WHERE v.product_id IN (
	    	SELECT DISTINCT prod_id 
	    	FROM product_user pu
	    	JOIN drug_user du
	    	ON pu.user_id=du.id
	    	WHERE du.leader_path LIKE CONCAT(#{leaderPath},'%')
	    )
		
		ORDER BY createTime DESC
		LIMIT #{currentSize}, #{pageSize}
	</select>

	<insert id="saveVirtualDoctorCallInfo" keyProperty="callId" useGeneratedKeys="true"
		parameterType="com.nuoxin.virtual.rep.api.entity.v2_5.VirtualDoctorCallInfoParams">
		INSERT INTO virtual_doctor_call_info
		(sin_token, virtual_doctor_id, mobile, type, status, status_name, create_time, call_url, call_time)
		VALUES
		(#{sinToken}, #{virtualDoctorId}, #{mobile}, #{type}, #{status}, #{statusName}, #{visitTime}, #{callUrl}, #{callTime})
	</insert>
	
	<update id="updateVirtualDoctorCallInfo" parameterType="com.nuoxin.virtual.rep.api.entity.v2_5.VirtualDoctorCallInfoParams">
		UPDATE virtual_doctor_call_info 
		<set>
			<if test="productId != null and productId>0">
				product_id = #{productId} ,
			</if>
			<if test="doctorQuestionnaireId != null and doctorQuestionnaireId > 0">
				doctor_questionnaire_id=#{doctorQuestionnaireId},
			</if>
			<if test="callUrl != null and callUrl !=''">
				call_url=#{callUrl},
			</if>
			<if test="status != null">
				status=#{status},
			</if>
			<if test="remark != null and remark !=''">
				remark=#{remark}
			</if>
		</set>
		WHERE id=#{callId}
	</update>

	<select id="geTelephoneDoctorVisitCount" resultType="com.nuoxin.virtual.rep.api.entity.v2_5.StatisticsDrugNumResponse">
		<!-- 2018-09-29 修改前
		SELECT
		virtual_drug_user_id drugUserId,count(DISTINCT virtual_doctor_id) total
		FROM virtual_doctor_call_info
		WHERE
		virtual_drug_user_id IN
		<foreach collection="drugUserIds" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>
		<if test="startTime!=null">
			and date_format(create_time,'%Y-%m-%d')&gt;=#{startTime}
		</if>
		<if test="endTime!=null">
			and date_format(create_time,'%Y-%m-%d')&lt;=#{endTime}
		</if>
		AND product_id=#{productId}
		GROUP BY virtual_drug_user_id
		-->

		<!-- 2018-09-29 重构后 -->
		SELECT
		call_dud.drugUserId,
		COUNT(
		DISTINCT vdci.virtual_doctor_id
		) total
		FROM
		virtual_doctor_call_info vdci
		INNER JOIN (
		SELECT DISTINCT
		d.id doctorId,
		du.id drugUserId
		FROM
		doctor d
		INNER JOIN drug_user_doctor dud ON d.id = dud.doctor_id
		INNER JOIN drug_user du ON dud.drug_user_id = du.id
		WHERE
		dud.is_available = 1
		AND dud.prod_id = #{productId}
		AND du.id IN
		<foreach collection="drugUserIds" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>
		) call_dud ON vdci.virtual_doctor_id = call_dud.doctorId
		WHERE
		vdci.product_id
		<if test="startTime!=null and startTime!=''">
			AND DATE_FORMAT(create_time,'%Y-%m-%d') &gt;=#{startTime}
		</if>
		<if test="endTime!=null and endTime!=''">
			AND DATE_FORMAT(create_time,'%Y-%m-%d') &lt;=#{endTime}
		</if>
		GROUP BY
		call_dud.drugUserId

	</select>

	<!-- 更新打电话的医生ID -->
	<update id="updateCallInfoDoctorId">
		UPDATE virtual_doctor_call_info SET virtual_doctor_id=#{doctorId}
		WHERE mobile IN
		<foreach collection="telephoneList" item="telephone" open="(" close=")" separator=",">
			#{telephone}
		</foreach>
		AND virtual_doctor_id IS NULL
	</update>


	<!-- 保存电话记录 -->
	<insert id="saveCallInfo" keyProperty="id" useGeneratedKeys="true" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.call.CallRequestBean">
		INSERT INTO virtual_doctor_call_info(sin_token, virtual_doctor_id, mobile, virtual_drug_user_id, status, status_name, call_time, call_url, type, product_id)
		VALUES
		(#{sinToken}, #{doctorId}, #{mobile}, #{drugUserId}, #{status}, #{statusName}, #{times}, #{url}, #{type}, #{productId})
	</insert>


	<!-- 得到医生电话以及接通次数 -->
	<select id="getTelephoneCallCount" resultType="com.nuoxin.virtual.rep.api.web.controller.response.v2_5.CallTelephoneReponseBean">
		SELECT * FROM (
		SELECT t.telephone,
		(SELECT COUNT(*) FROM virtual_doctor_call_info WHERE mobile=t.telephone AND status_name = 'answer') callCount
		 FROM (

		SELECT
							telephone
						FROM
							doctor
						WHERE
							id = #{doctorId}
						AND LEFT (telephone, 1) = 1
						UNION
							SELECT
								telephone
							FROM
								doctor_telephone
							WHERE
								doctor_id = #{doctorId}

		) t
		) a ORDER BY a.callCount DESC


	</select>



	<update id="updateCallProduct">
		UPDATE virtual_doctor_call_info SET product_id=#{productId}
		WHERE id = #{callId}
	</update>
</mapper>
