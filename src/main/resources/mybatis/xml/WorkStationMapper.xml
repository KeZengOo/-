<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuoxin.virtual.rep.api.mybatis.WorkStationMapper">

    <select id="getTotalCustomerStatistic" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean"
            resultType="com.nuoxin.virtual.rep.api.web.controller.response.work.CustomerSumResponseBean">
        select count(1) as typeSum,dv.client_level as type from doctor d
        inner join doctor_virtual dv
        on d.id=dv.doctor_id
        inner join drug_user_doctor dud
        on d.id = dud.doctor_id
        inner join drug_user du
        on dud.drug_user_id=du.id
        where du.leader_path like #{leaderPath}
        and dud.prod_id=#{productId}
        group by dv.client_level

    </select>

    <select id="getAddCustomerStatistic" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean"
            resultType="com.nuoxin.virtual.rep.api.web.controller.response.work.CustomerSumResponseBean">
        select count(1) as typeSum,dv.client_level as type from doctor d
        inner join doctor_virtual dv
        on d.id=dv.doctor_id
        inner join drug_user_doctor dud
        on d.id = dud.doctor_id
        inner join drug_user du
        on dud.drug_user_id=du.id
        where
        date_format(d.create_time,'%Y-%m')=date_format(now(),'%Y-%m')
        and du.leader_path like #{leaderPath}
        and dud.prod_id=#{productId}
        group by dv.client_level

    </select>

    <select id="getCoverCustomerStatistic" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean"
            resultType="com.nuoxin.virtual.rep.api.web.controller.response.work.CustomerSumResponseBean">

        select count(1) as typeSum,dv.client_level as type from doctor d
        inner join (
        select distinct t.doctor_id from(
        select distinct vm.doctor_id from virtual_message vm where vm.user_type=2 and vm.message_type=1 and date_format(vm.message_time,'%Y-%m')=date_format(now(),'%Y-%m')
        union
        select distinct vm.doctor_id from virtual_message vm where vm.user_type=2 and vm.message_type=2 and vm.product_id=#{productId} and date_format(vm.message_time,'%Y-%m')=date_format(now(),'%Y-%m')
        union
        select distinct vei.doctor_id from virtual_email_info vei where date_format(vei.create_time,'%Y-%m')=date_format(now(),'%Y-%m') and vei.product_id=#{productId}
        union
        select distinct tmad.doctor_id from t_meeting_attend_details tmad inner join t_meeting_data tma on tmad.meeting_id=tma.id where tma.product_id=#{productId} and date_format(tmad.attend_start_time,'%Y-%m')=date_format(now(),'%Y-%m')
        union
        select distinct ar.read_person_id from activity_read ar inner join t_content_product tcp on ar.data_id=tcp.content_id inner join activity_info ai on tcp.content_id=ai.id where tcp.product_id=#{productId} and date_format(ar.create_time,'%Y-%m')=date_format(now(),'%Y-%m')
        ) t ) a
        on d.id=a.doctor_id
        inner join doctor_virtual dv
        on d.id=dv.doctor_id
        inner join drug_user_doctor dud
        on d.id = dud.doctor_id
        inner join drug_user du
        on dud.drug_user_id=du.id
        where 1=1
        and du.leader_path like #{leaderPath}
        and dud.prod_id=#{productId}
        group by dv.client_level

    </select>


    <select id="getOneMonthNoFollowCustomerList" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean"
            resultType="com.nuoxin.virtual.rep.api.web.controller.response.work.OneMonthNoFollowCustomerResponseBean">
        select distinct d.id doctorId, d.name doctorName,d.hospital_name hospitalName,d.depart depart,dv.client_level level, a.diff_days diffDays   from doctor d
        inner join (
        select a.doctor_id,(to_days(now())-to_days(date_format(a.create_time,'%Y-%m-%d'))) as diff_days from (
            select distinct t.doctor_id, max(t.create_time) as create_time from (
            select vm.doctor_id,max(vm.message_time) as create_time from virtual_message vm where vm.user_type=2 and vm.message_type=1 and date_format(vm.message_time,'%Y-%m')=date_format(now(),'%Y-%m') group by vm.doctor_id
            union
            select vm.doctor_id,max(vm.message_time) as create_time from virtual_message vm where vm.user_type=2 and vm.message_type=2 and vm.product_id=#{productId} and date_format(vm.message_time,'%Y-%m')=date_format(now(),'%Y-%m') group by vm.doctor_id
            union
            select vei.doctor_id,max(vei.create_time) as create_time from virtual_email_info vei where date_format(vei.create_time,'%Y-%m')=date_format(now(),'%Y-%m') and vei.product_id=#{productId} group by vei.doctor_id
            union
            select tmad.doctor_id,max(tmad.attend_end_time) as create_time from t_meeting_attend_details tmad inner join t_meeting_data tma on tmad.meeting_id=tma.id where tma.product_id=#{productId} and date_format(tmad.attend_start_time,'%Y-%m')=date_format(now(),'%Y-%m') group by tmad.doctor_id
            union
            select ar.read_person_id,max(ar.create_time) as create_time from activity_read ar inner join t_content_product tcp on ar.data_id=tcp.content_id inner join activity_info ai on tcp.content_id=ai.id where tcp.product_id=#{productId} and date_format(ar.create_time,'%Y-%m')=date_format(now(),'%Y-%m') group by ar.read_person_id
            ) t group by t.doctor_id
            ) a where to_days(now())-to_days(date_format(a.create_time,'%Y-%m-%d')) >= 30
				) a
        on d.id=a.doctor_id
        inner join doctor_virtual dv
        on d.id=dv.doctor_id
        inner join drug_user_doctor dud
        on d.id = dud.doctor_id
        inner join drug_user du
        on dud.drug_user_id=du.id
        where 1=1
        and du.leader_path like #{leaderPath}
        and dud.prod_id=#{productId}
        group by dv.client_level
        order by a.diff_days desc
        limit #{page},#{pageSize}

    </select>


    <select id="getOneMonthNoFollowCustomerListCount" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean"
            resultType="java.lang.Integer">
        select count(distinct d.id)
        from doctor d
        inner join (
        select a.doctor_id,(to_days(now())-to_days(date_format(a.create_time,'%Y-%m-%d'))) as diff_days from (
        select distinct t.doctor_id, max(t.create_time) as create_time from (
        select vm.doctor_id,max(vm.message_time) as create_time from virtual_message vm where vm.user_type=2 and vm.message_type=1 and date_format(vm.message_time,'%Y-%m')=date_format(now(),'%Y-%m') group by vm.doctor_id
        union
        select vm.doctor_id,max(vm.message_time) as create_time from virtual_message vm where vm.user_type=2 and vm.message_type=2 and vm.product_id=#{productId} and date_format(vm.message_time,'%Y-%m')=date_format(now(),'%Y-%m') group by vm.doctor_id
        union
        select vei.doctor_id,max(vei.create_time) as create_time from virtual_email_info vei where date_format(vei.create_time,'%Y-%m')=date_format(now(),'%Y-%m') and vei.product_id=#{productId} group by vei.doctor_id
        union
        select tmad.doctor_id,max(tmad.attend_end_time) as create_time from t_meeting_attend_details tmad inner join t_meeting_data tma on tmad.meeting_id=tma.id where tma.product_id=#{productId} and date_format(tmad.attend_start_time,'%Y-%m')=date_format(now(),'%Y-%m') group by tmad.doctor_id
        union
        select ar.read_person_id,max(ar.create_time) as create_time from activity_read ar inner join t_content_product tcp on ar.data_id=tcp.content_id inner join activity_info ai on tcp.content_id=ai.id where tcp.product_id=#{productId} and date_format(ar.create_time,'%Y-%m')=date_format(now(),'%Y-%m') group by ar.read_person_id
        ) t group by t.doctor_id
        ) a where to_days(now())-to_days(date_format(a.create_time,'%Y-%m-%d')) >= 30
        ) a
        on d.id=a.doctor_id
        inner join doctor_virtual dv
        on d.id=dv.doctor_id
        inner join drug_user_doctor dud
        on d.id = dud.doctor_id
        inner join drug_user du
        on dud.drug_user_id=du.id
        where 1=1
        and du.leader_path like #{leaderPath}
        and dud.prod_id=#{productId}
        group by dv.client_level


    </select>


    <select id="minCallTotalTime" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean"
            resultType="java.util.Map">
        select t.name as drugUserName,concat(min(t.sum_call_time),'') as minCallTime  from (
        select ifnull(sum(vdci.call_time),0) as sum_call_time,du.id, du.name
        from virtual_doctor_call_info vdci
        inner join virtual_doctor_call_info_details vdcid
        on vdci.id=vdcid.call_id
        inner join drug_user du
        on vdci.virtual_drug_user_id = du.id
        where vdci.product_id=#{productId}
        and vdcid.status_name='answer'
        <if test="dateType !=null">
            <if test="dateType==1">
                and date_format(vdci.create_time,'%Y-%m-%d')=WEEKOFYEAR(NOW(),'%Y-%m-%d')
            </if>
            <if test="dateType==2">
                and WEEKOFYEAR(vdci.create_time)=WEEKOFYEAR(NOW())
            </if>
            <if test="dateType==3">
                and MONTH(vdci.create_time)=MONTH(NOW())
            </if>
            <if test="dateType==4">
                and QUARTER(vdci.create_time)=QUARTER(NOW())
            </if>
        </if>

        and vdci.virtual_doctor_id in (
            select d.id from doctor d
            inner join drug_user_doctor dud
          on d.id=dud.doctor_id
          inner join drug_user du
          on dud.drug_user_id=du.id
          where dud.prod_id=#{productId} and du.leader_path like #{leaderPath}
        )
        and du.leader_path like #{leaderPath}
        group by vdci.virtual_drug_user_id
        ) t group by t.id

    </select>


    <select id="minAvgCallTotalTime" resultType="java.util.Map"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">
        select a.drugUserName,concat(min(a.avgCallTime),'') as minAvgCallTime from (
        select t.id as drugUserId, t.name as drugUserName,(min(t.sum_call_time)/(if(ifnull(t.call_count,0)=0,1,t.call_count))) as avgCallTime from (
        select ifnull(sum(vdci.call_time),0) as sum_call_time,count(distinct vdci.id) as call_count,du.id, du.name
        from virtual_doctor_call_info vdci
        inner join virtual_doctor_call_info_details vdcid
        on vdci.id=vdcid.call_id
        inner join drug_user du
        on vdci.virtual_drug_user_id = du.id
        where vdci.product_id=#{productId}
        and vdcid.status_name='answer'
        <if test="dateType !=null">
            <if test="dateType==1">
                and date_format(vdci.create_time,'%Y-%m-%d')=WEEKOFYEAR(NOW(),'%Y-%m-%d')
            </if>
            <if test="dateType==2">
                and WEEKOFYEAR(vdci.create_time)=WEEKOFYEAR(NOW())
            </if>
            <if test="dateType==3">
                and MONTH(vdci.create_time)=MONTH(NOW())
            </if>
            <if test="dateType==4">
                and QUARTER(vdci.create_time)=QUARTER(NOW())
            </if>
        </if>
        and vdci.virtual_doctor_id in (
            select d.id from doctor d
            inner join drug_user_doctor dud
          on d.id=dud.doctor_id
          inner join drug_user du
          on dud.drug_user_id=du.id
          where dud.prod_id=#{productId} and du.leader_path like #{leaderPath}
        )
        and du.leader_path like #{leaderPath}
        group by vdci.virtual_drug_user_id
        ) t group by t.id
        ) a group by a.drugUserId

    </select>


    <select id="minCallCount" resultType="java.util.Map" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">
        select t.drugUserName,concat(min(t.call_count),'') as minCallCount from (
        select ifnull(count(distinct vdci.id),0) as call_count, du.name as drugUserName,vdci.virtual_drug_user_id as drugUserId
        from virtual_doctor_call_info vdci
        inner join virtual_doctor_call_info_details vdcid
        on vdci.id=vdcid.call_id
        inner join drug_user du
        on vdci.virtual_drug_user_id = du.id
        where vdci.product_id=#{productId}
        and vdcid.status_name='answer'
        <if test="dateType !=null">
            <if test="dateType==1">
                and date_format(vdci.create_time,'%Y-%m-%d')=WEEKOFYEAR(NOW(),'%Y-%m-%d')
            </if>
            <if test="dateType==2">
                and WEEKOFYEAR(vdci.create_time)=WEEKOFYEAR(NOW())
            </if>
            <if test="dateType==3">
                and MONTH(vdci.create_time)=MONTH(NOW())
            </if>
            <if test="dateType==4">
                and QUARTER(vdci.create_time)=QUARTER(NOW())
            </if>
        </if>
        and vdci.virtual_doctor_id in (
            select d.id from doctor d
            inner join drug_user_doctor dud
          on d.id=dud.doctor_id
          inner join drug_user du
          on dud.drug_user_id=du.id
          where dud.prod_id=#{productId} and du.leader_path like #{leaderPath}
        )
        and du.leader_path like #{leaderPath}
        group by vdci.virtual_drug_user_id
        ) t group by t.drugUserId

    </select>


    <select id="minCallCoveredCount" resultType="java.util.Map"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">
        select t.drugUserId, concat(min(t.covered_count),'') minCallCoveredCount from (
        select ifnull(count(distinct vdci.virtual_doctor_id),0) as covered_count, du.name as drugUserName,vdci.virtual_drug_user_id as drugUserId
        from virtual_doctor_call_info vdci
        inner join virtual_doctor_call_info_details vdcid
        on vdci.id=vdcid.call_id
        inner join drug_user du
        on vdci.virtual_drug_user_id = du.id
        where vdci.product_id=#{productId}
        and vdcid.status_name='answer'
        <if test="dateType !=null">
            <if test="dateType==1">
                and date_format(vdci.create_time,'%Y-%m-%d')=WEEKOFYEAR(NOW(),'%Y-%m-%d')
            </if>
            <if test="dateType==2">
                and WEEKOFYEAR(vdci.create_time)=WEEKOFYEAR(NOW())
            </if>
            <if test="dateType==3">
                and MONTH(vdci.create_time)=MONTH(NOW())
            </if>
            <if test="dateType==4">
                and QUARTER(vdci.create_time)=QUARTER(NOW())
            </if>
        </if>
        and vdci.virtual_doctor_id in (
            select d.id from doctor d
            inner join drug_user_doctor dud
          on d.id=dud.doctor_id
          inner join drug_user du
          on dud.drug_user_id=du.id
          where dud.prod_id=#{productId} and du.leader_path like #{leaderPath}
        )
        and du.leader_path like #{leaderPath}
        group by vdci.virtual_drug_user_id
        ) t group by t.drugUserId

    </select>

    <select id="minImCount" resultType="java.util.Map" parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">
        select t.drugUserName, min(t.message_count) as minMessageCount from (
            select count(distinct vm.id) as message_count,du.name drugUserName,du.id as drugUserId
            from virtual_message vm
            inner join drug_user du
            on vm.drug_user_id=du.id
            where vm.product_id=#{productId}
            and vm.message_type=2
            and vm.user_type=1
            <if test="dateType !=null">
                <if test="dateType==1">
                    and date_format(vdci.create_time,'%Y-%m-%d')=WEEKOFYEAR(NOW(),'%Y-%m-%d')
                </if>
                <if test="dateType==2">
                    and WEEKOFYEAR(vdci.create_time)=WEEKOFYEAR(NOW())
                </if>
                <if test="dateType==3">
                    and MONTH(vdci.create_time)=MONTH(NOW())
                </if>
                <if test="dateType==4">
                    and QUARTER(vdci.create_time)=QUARTER(NOW())
                </if>
            </if>
            and du.leader_path like #{leaderPath}
            and vm.doctor_id in (
            select d.id from doctor d
            inner join drug_user_doctor dud
          on d.id=dud.doctor_id
          inner join drug_user du
          on dud.drug_user_id=du.id
          where dud.prod_id=#{productId} and du.leader_path like #{leaderPath}
                )
        group by vm.drug_user_id
        ) t
    </select>


    <select id="minImCoveredCount" resultType="java.util.Map"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">
        select t.drugUserName, min(t.message_count) as minMessageCoveredCount from (
        select count(distinct vm.doctor_id) as message_count,du.name drugUserName,du.id as drugUserId
        from virtual_message vm
        inner join drug_user du
        on vm.drug_user_id=du.id
        where vm.product_id=#{productId}
        and vm.message_type=2
        and vm.user_type=1
        and WEEKOFYEAR(vm.message_time)=WEEKOFYEAR(NOW())
        and du.leader_path like #{drugUserId}
        and vm.doctor_id in (
                    select d.id from doctor d
                    inner join drug_user_doctor dud
                  on d.id=dud.doctor_id
                  inner join drug_user du
                  on dud.drug_user_id=du.id
                  where dud.prod_id=#{productId} and du.leader_path like #{drugUserId}
                )
        group by vm.drug_user_id
        ) t


    </select>


    <select id="minWechatCount" resultType="java.util.Map"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">
        select t.drugUserName, min(t.message_count) as minWechatCount from (
        select count(distinct vm.id) as message_count,du.name drugUserName,du.id as drugUserId
        from virtual_message vm
        inner join drug_user du
        on vm.drug_user_id=du.id
        where 1=1
        and vm.message_type=1
        and vm.user_type=1
        and WEEKOFYEAR(vm.message_time)=WEEKOFYEAR(NOW())
        and du.leader_path like #{leaderPath}
        and vm.doctor_id in (
                    select d.id from doctor d
                    inner join drug_user_doctor dud
                  on d.id=dud.doctor_id
                  inner join drug_user du
                  on dud.drug_user_id=du.id
                  where dud.prod_id=#{productId} and du.leader_path like #{leaderPath}
                )
        group by vm.drug_user_id
        ) t


    </select>

    <select id="minWechatCoveredCount" resultType="java.util.Map"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">
        select t.drugUserName, min(t.message_count) as minWechatCoveredCount from (
        select count(distinct vm.doctor_id) as message_count,du.name drugUserName,du.id as drugUserId
        from virtual_message vm
        inner join drug_user du
        on vm.drug_user_id=du.id
        where 1=1
        and vm.message_type=1
        and vm.user_type=2
        and WEEKOFYEAR(vm.message_time)=WEEKOFYEAR(NOW())
        and du.leader_path like #{leaderPath}
        and vm.doctor_id in (
                    select d.id from doctor d
                    inner join drug_user_doctor dud
                  on d.id=dud.doctor_id
                  inner join drug_user du
                  on dud.drug_user_id=du.id
                  where dud.prod_id=#{productId} and du.leader_path like #{leaderPath}
                )
        group by vm.drug_user_id
        ) t

    </select>

    <select id="callNoReach" resultType="java.lang.String"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">
            select distinct t.drugUserName from (
            select ifnull(count(distinct vdci.virtual_doctor_id),0) as covered_count, du.name as drugUserName,vdci.virtual_drug_user_id as drugUserId
            from virtual_doctor_call_info vdci
            inner join virtual_doctor_call_info_details vdcid
            on vdci.id=vdcid.call_id
            inner join drug_user du
            on vdci.virtual_drug_user_id = du.id
            where vdci.product_id=#{productId}
            and vdcid.status_name='answer'

            and WEEKOFYEAR(vdci.create_time)=WEEKOFYEAR(NOW())

            and vdci.virtual_doctor_id in (
                    select d.id from doctor d
                    inner join drug_user_doctor dud
                on d.id=dud.doctor_id
                inner join drug_user du
                on dud.drug_user_id=du.id
                where dud.prod_id=#{productId} and du.leader_path like #{leaderPath}
            )
            and du.leader_path like #{leaderPath}
            group by vdci.virtual_drug_user_id
            ) t where t.covered_count &lt; #{callReach}

    </select>

    <select id="wechatNoReach" resultType="java.lang.String"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">
        select distinct t.drugUserName from (
        select count(distinct vm.doctor_id) as message_count,du.name drugUserName,du.id as drugUserId
        from virtual_message vm
        inner join drug_user du
        on vm.drug_user_id=du.id
        where 1=1
        and vm.message_type=1
        and vm.user_type=2
        and WEEKOFYEAR(vm.message_time)=WEEKOFYEAR(NOW())
        and du.leader_path like #{leaderPath}
        and vm.doctor_id in (
        select d.id from doctor d
        inner join drug_user_doctor dud
        on d.id=dud.doctor_id
        inner join drug_user du
        on dud.drug_user_id=du.id
        where dud.prod_id=#{productId} and du.leader_path like #{leaderPath}
        )
        group by vm.drug_user_id

        ) t where t.message_count &lt; #{wechatReach}

    </select>

    <select id="imNoReach" resultType="java.lang.String"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">

        select distinct t.drugUserName from (
        select count(distinct vm.doctor_id) as message_count,du.name drugUserName,du.id as drugUserId
        from virtual_message vm
        inner join drug_user du
        on vm.drug_user_id=du.id
        where 1=1
        and vm.product_id = #{productId}
        and vm.message_type=2
        and vm.user_type=2
        and WEEKOFYEAR(vm.message_time)=WEEKOFYEAR(NOW())
        and du.leader_path like #{leaderPath}
        and vm.doctor_id in (
        select d.id from doctor d
        inner join drug_user_doctor dud
        on d.id=dud.doctor_id
        inner join drug_user du
        on dud.drug_user_id=du.id
        where dud.prod_id=#{productId} and du.leader_path like #{leaderPath}
        )
        group by vm.drug_user_id

        ) t where t.message_count &lt; #{imReach}
    </select>

    <select id="dropCustomers" resultType="java.util.Map"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">


    </select>

</mapper>
