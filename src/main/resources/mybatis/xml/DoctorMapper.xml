<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuoxin.virtual.rep.api.mybatis.DoctorMapper">


    <select id="getCustomerSumStatistic"
            resultType="com.nuoxin.virtual.rep.api.web.controller.response.work.CustomerSumResponseBean"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">
        select count(vd.client_level) as typeSum ,vd.client_level as type from virtual_doctor vd
        inner join virtual_drug_user_doctor vdud
        on vd.id = vdud.virtual_doctor_id
        where vdud.product_id=#{productId}
        and vd.drug_user_ids like #{drugUserIdStr}
        group by vd.client_level

    </select>


    <select id="getCustomerAddStatistic"
            resultType="com.nuoxin.virtual.rep.api.web.controller.response.work.CustomerSumResponseBean"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">

    </select>


    <select id="getCustomerCoveredStatistic"
            resultType="com.nuoxin.virtual.rep.api.web.controller.response.work.CustomerSumResponseBean"
            parameterType="com.nuoxin.virtual.rep.api.web.controller.request.WorkStationRequestBean">

    </select>


    <update id="updateFixedField">

        update doctor set name=#{name}, mobile=#{telephone}, depart = #{depart}, hospital_name = #{hospital}

        where id = #{doctorId}


        update doctor
        <set>

            <if test="name !=null and name !=''">
                name = #{name},
            </if>

            <if test="mobile !=null and mobile !=''">
                name = #{mobile},
            </if>

            <if test="depart !=null and depart !=''">
                name = #{depart},
            </if>

            <if test="hospital_name !=null and hospital_name !=''">
                name = #{hospital}
            </if>


        </set>

        where id = #{doctor}



    </update>


    <update id="updateFixedName" parameterType="com.nuoxin.virtual.rep.api.web.controller.response.hcp.HcpDynamicRequestBean">
        update doctor set name = #{name} where id=#{doctorId}
    </update>

    <update id="updateFixedTelephone" parameterType="com.nuoxin.virtual.rep.api.web.controller.response.hcp.HcpDynamicRequestBean">
        update doctor set telephone = #{telephone} where id=#{doctorId}
    </update>

    <update id="updateFixedDepart" parameterType="com.nuoxin.virtual.rep.api.web.controller.response.hcp.HcpDynamicRequestBean">
        update doctor set depart = #{depart} where id=#{doctorId}
    </update>

    <update id="updateFixedHospital" parameterType="com.nuoxin.virtual.rep.api.web.controller.response.hcp.HcpDynamicRequestBean">
        update doctor set hospital_name = #{hospital} where id=#{doctorId}
    </update>

	<!-- 以下是虚拟工作台 v2.5 后用到的 -->
	<select id="getDoctorIdByMobile" resultType="java.lang.Long">
		SELECT id FROM doctor WHERE telephone=#{mobile}
	</select>
	
	<!-- 根据过滤条件获取医生总条数 -->
	<select id="getListCount" resultType="java.lang.Integer">
		SELECT 
			count(d.id)
		FROM doctor d 
		JOIN (
			<!-- 根据 virtualDrugUserIds (所有下属的)获取对应去重后的 doctorIds -->
	  		SELECT 
				DISTINCT doctor_id 
			FROM drug_user_doctor 
			WHERE is_available=1 AND drug_user_id IN
			<foreach collection="virtualDrugUserIds" item="virtualDrugUserId" open="(" close=")" separator=",">
	   			#{virtualDrugUserId}
	  		</foreach> 
	  		
	  		<!-- 根据产品线 ID 筛选 -->
	  		<if test="productLineIds != null">
	            AND prod_id IN 
				<foreach collection="productLineIds" item="productLineId" open="(" close=")" separator=",">
                  #{productLineId}
  				</foreach> 
			</if>
  		) temp ON  d.id=temp.doctor_id
  		
  		<!-- 搜索:d.name 模糊匹配,d.telephone 及 d.depart 精确匹配 -->
  		<if test="search != null">
  			WHERE 
			d.name LIKE "%"#{search,jdbcType=VARCHAR}"%" 
			OR d.telephone LIKE "%"#{search,jdbcType=VARCHAR}"%" 
			OR d.depart LIKE "%"#{search,jdbcType=VARCHAR}"%"
  		</if>
  		
	</select>

	<!-- 根据手机号查找医生 -->
	<select id="findTopByMobile" resultType="com.nuoxin.virtual.rep.api.entity.Doctor">
		  SELECT
			DISTINCT
			d.id,
			d.email,
			d.`name`,
			d.hospital_id hospitalId,
			d.hospital_name hospitalName,
			d.provice province,
			d.city,
			d.depart department,
			d.sex
		FROM
			doctor d
		WHERE d.telephone=#{mobile}
		OR d.id=(SELECT doctor_id FROM doctor_telephone WHERE telephone=#{mobile} LIMIT 1)

	</select>

	
	<!-- 根据过滤条件获取医生拜访列表信息(不含对应的产品信息) -->
	<select id="getList" resultType="com.nuoxin.virtual.rep.api.web.controller.response.v2_5.CustomerFollowListBean">
		<!-- 根据 virtualDrugUserIds 获取对应医生基本信息 -->
		SELECT 
			d.id AS doctorId, d.name AS doctorName, d.telephone AS doctorMobile, 
			d. sex AS gender, d.depart AS department, d.hospital_name AS hospitalName,d.email,
			tel_visit.create_time AS visitTime,tel_visit.next_visit_time AS nextVisitTime,tel_visit.visit_result AS visitResult,
			dm.wechat, dm.secondary_mobile AS secondaryDoctorMobile, dm.thirdary_mobile AS thirdaryDoctorMobile
		FROM doctor d 
		LEFT JOIN doctor_mend dm
			ON d.id=dm.virtual_doctor_id
		JOIN (
			<!-- 根据 virtualDrugUserIds 获取对应的 doctorIds -->
			SELECT 
				DISTINCT doctor_id 
			FROM drug_user_doctor 
			WHERE is_available=1 AND drug_user_id IN
				<foreach collection="virtualDrugUserIds" item="virtualDrugUserId" open="(" close=")" separator=",">
		   			#{virtualDrugUserId}
		  		</foreach> 
		  	
		  	<!-- 根据产品线 ID 筛选 -->
		  	<if test="productLineIds != null">
	            AND prod_id IN 
				<foreach collection="productLineIds" item="productLineId" open="(" close=")" separator=",">
                  #{productLineId}
  				</foreach> 
			</if>
	  	) temp  ON  d.id=temp.doctor_id
	  	
	  	<!-- 搜索 -->
	  	<if test="search != null">
  			AND (
  				d.name LIKE "%"#{search,jdbcType=VARCHAR}"%" 
				OR d.telephone LIKE "%"#{search,jdbcType=VARCHAR} "%"
				OR d.depart LIKE "%"#{search,jdbcType=VARCHAR}"%"
			)
  		</if>
		
		<!-- 左连接 virtual_doctor_call_info_mend 表获取电话拜访信息 -->
		LEFT JOIN (
			SELECT c.virtual_doctor_id, c.create_time,
			m.visit_result, m.next_visit_time FROM virtual_doctor_call_info c 
			LEFT JOIN virtual_doctor_call_info_mend m		
				ON m.call_id=c.id	
			WHERE c.id IN (
				SELECT MAX(id) FROM virtual_doctor_call_info  WHERE virtual_drug_user_id IN 
 				<foreach collection="virtualDrugUserIds" item="virtualDrugUserId" open="(" close=")" separator=",">
		   			#{virtualDrugUserId}
		  		</foreach> 
		  		GROUP BY virtual_doctor_id
			) 
			
		) tel_visit ON tel_visit.virtual_doctor_id=d.id
		
		GROUP BY d.id
		ORDER BY visitTime DESC <!-- OTHER ORDER BY TODO  -->
		LIMIT #{currentSize},#{pageSize}
	</select>

	<select id="selectDoctorByMobiles" resultType="com.nuoxin.virtual.rep.api.entity.Doctor">
		select DISTINCT id,email,name,hospital_id hospitalId,hospital_name hospitalName,provice,city,depart department,telephone mobile,positions doctorLevel,
		create_time createTime,status,master_data_id masterDataId
		FROM doctor t
		WHERE
		t.telephone IN
		<foreach collection="mobiles" item="mobile" open="(" close=")" separator=",">
			#{mobile}
		</foreach>

		OR t.id IN
		(
		SELECT DISTINCT doctor_id FROM doctor_telephone
		WHERE telephone IN
		<foreach collection="mobiles" item="mobile" open="(" close=")" separator=",">
			#{mobile}
		</foreach>
		)

	</select>

	<insert id="saveDoctor" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO doctor
		( email, name, sex,hospital_id,hospital_name,provice,city,depart,telephone,positions,create_time,status,master_data_id)
		VALUES
		( #{email}, #{name},#{sex}, #{hospitalId}, #{hospitalName}, #{province}, #{city}, #{department}, #{mobile}, #{doctorLevel},now(),1,#{masterDataId})
	</insert>

	<update id="updateDoctor" >
		UPDATE doctor
		<trim prefix="set" suffixOverrides=",">
			<if test="email !=null and email !=''">
				email=#{email},
			</if>
			<if test="name !=null and name !=''">
				name=#{name},
			</if>
			<if test="hospitalId !=null ">
				hospital_id=#{hospitalId},
			</if>
			<if test="hospitalName !=null and hospitalName !=''">
				hospital_name=#{hospitalName},
			</if>
			<if test="province !=null and province !=''">
				provice=#{province},
			</if>
			<if test="city !=null and city !=''">
				city=#{city},
			</if>
			<if test="department !=null and department !=''">
				depart=#{department},
			</if>
			<if test="mobile !=null and mobile !=''">
				telephone=#{mobile},
			</if>
			<if test="sex !=null">
				sex=#{sex},
			</if>
			<if test="doctorLevel !=null ">
				positions=#{doctorLevel},
			</if>
			<if test="masterDataId !=null ">
				master_data_id=#{masterDataId},
			</if>
		</trim>
		WHERE id=#{id}
	</update>


	<select id="doctorCountByMobile" resultType="java.lang.Integer">
		SELECT sum(num) FROM (
		SELECT COUNT(*) num FROM doctor WHERE telephone=#{mobile}
		UNION
		SELECT COUNT(*) num FROM doctor_telephone WHERE telephone=#{mobile}
		) t
	</select>

	<select id="doctorNameCountByMobile" resultType="java.lang.String">
		SELECT DISTINCT d.name FROM doctor d
		WHERE d.telephone=#{mobile}
		OR d.id IN
		(
	  SELECT DISTINCT doctor_id FROM doctor_telephone WHERE telephone=#{mobile}

		)
	</select>

	<!-- 保存医生的多个手机号 -->
	<insert id="insertDoctorTelephone">
		INSERT INTO doctor_telephone(doctor_id, telephone, type)
		VALUES
		<foreach collection="list" item="d" separator=",">
			(#{d.doctorId}, #{d.telephone}, #{d.type})
		</foreach>
	</insert>

	<!-- 得到医生的联系方式 -->
	<select id="getDoctorTelephone" resultType="java.lang.String">
		SELECT telephone FROM doctor WHERE id=#{doctorId} AND LEFT(telephone, 1)=1
		UNION
		SELECT telephone FROM doctor_telephone WHERE doctor_id=#{doctorId}
	</select>

	<!-- 删除医生的多个联系方式 -->
	<delete id="deleteDoctorTelephone">
		DELETE FROM doctor_telephone WHERE doctor_id=#{doctorId}
	</delete>

	<!-- 查询总数，用于校验医生是否在指定产品下 -->
	<select id="doctorProductCount" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM drug_user_doctor WHERE doctor_id=#{doctorId} AND prod_id=#{productId}
		AND is_available=1
	</select>

	<!-- 根据联系方式获取医生列表 -->
	<select id="getDoctorListByTelephone" resultType="com.nuoxin.virtual.rep.api.web.controller.response.v2_5.DoctorDetailsResponseBean">
		SELECT DISTINCT
			d.id doctorId,
			d.`name` doctorName,
			h.id hospitalId,
			d.hospital_name hospitalName,
			h.`level` hospitalLevel,
			h.province,
			h.city,
			d.depart department
		FROM
			doctor d
		LEFT JOIN hospital h ON d.hospital_id = h.id
		WHERE
			d.id IN (
				SELECT
					id
				FROM
					doctor
				WHERE
					telephone = #{telephone}
				UNION
					SELECT
						doctor_id
					FROM
						doctor_telephone
					WHERE
						telephone = #{telephone}
			)
	</select>

</mapper>