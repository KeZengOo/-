<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuoxin.virtual.rep.api.mybatis.VisitingDataMapper">

	<!-- 查询符合条件的总记录数 -->
    <select id="getVisitDataCount" resultType="java.lang.Integer">
		SELECT
			COUNT(DISTINCT pl.prod_id, du.id)
		FROM
			product_line pl
		JOIN product_user pu ON pu.prod_id = pl.prod_id
		JOIN drug_user du ON pu.user_id = du.id
		JOIN role_user ru ON ru.user_id = du.id
		WHERE
		pl.show_place = 1 AND ru.role_id IN (101, 104, 105)
		AND pl.prod_id IN
		<foreach collection="key.productIdList" item="pro" open="(" separator="," close=")">
			#{pro}
		</foreach>
		<if test="key.drugUserIdList != null and key.drugUserIdList.size() > 0">
			AND du.id IN
			<foreach collection="key.drugUserIdList" item="uid" open="(" separator="," close=")">
				#{uid}
			</foreach>
		</if>
    </select>

	<select id="getVisitDataBaseInfo" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataBase">
		  	SELECT
				pl.prod_id proId,
				pl.prod_name productName,
				du.id userId,
				du.`name` userName,
				CASE sale_type
			WHEN 1 THEN
				'线上'
			WHEN 2 THEN
				'线下'
			ELSE
				''
			END visitWay,
			 GROUP_CONCAT(r.role_name) saleType
			FROM
				product_line pl
			JOIN product_user pu ON pu.prod_id = pl.prod_id
			JOIN drug_user du ON pu.user_id = du.id
			JOIN role_user ru ON ru.user_id = du.id
			LEFT JOIN role r ON ru.role_id = r.id
			WHERE
			pl.show_place = 1 AND ru.role_id IN (101, 104, 105)
			AND pl.prod_id IN
			<foreach collection="key.productIdList" item="pro" open="(" separator="," close=")">
				#{pro}
			</foreach>
		<if test="key.drugUserIdList != null and key.drugUserIdList.size() > 0">
			AND du.id IN
			<foreach collection="key.drugUserIdList" item="uid" open="(" separator="," close=")">
				#{uid}
			</foreach>
		</if>
			GROUP BY
				pl.prod_id,
				du.id
		LIMIT #{key.currentSize}, #{key.pageSize}
	</select>

	<select id="getVisitDataInfos" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataBase">
		SELECT
		pl.prod_id proId,
		pl.prod_name productName,
		du.id userId,
		du.`name` userName,
		CASE sale_type
		WHEN 1 THEN
		'线上'
		WHEN 2 THEN
		'线下'
		ELSE
		''
		END visitWay,
		GROUP_CONCAT(r.role_name) saleType
		FROM
		product_line pl
		JOIN product_user pu ON pu.prod_id = pl.prod_id
		JOIN drug_user du ON pu.user_id = du.id
		JOIN role_user ru ON ru.user_id = du.id
		LEFT JOIN role r ON ru.role_id = r.id
		WHERE
		pl.show_place = 1 AND ru.role_id IN (101, 104, 105)
		AND pl.prod_id IN
		<foreach collection="key.productIdList" item="pro" open="(" separator="," close=")">
			#{pro}
		</foreach>
		<if test="key.drugUserIdList != null and key.drugUserIdList.size() > 0">
			AND du.id IN
			<foreach collection="key.drugUserIdList" item="uid" open="(" separator="," close=")">
				#{uid}
			</foreach>
		</if>
		GROUP BY
		pl.prod_id,
		du.id
	</select>

	<!-- 参加问卷的医生数量 -->
	<select id="getQuestionHcpCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">

	</select>

	<!-- 拜访医生数 -->
	<select id="getVisitHcpCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT a.userId, COUNT(DISTINCT a.doctorId) total FROM
		(
		-- 电话拜访
		SELECT virtual_drug_user_id userId, a.virtual_doctor_id doctorId
		FROM virtual_doctor_call_info a INNER JOIN doctor d ON a.virtual_doctor_id = d.id
		WHERE a.product_id = #{key.proId} AND a.create_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND a.visit_channel = 1
		AND a.virtual_drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY a.virtual_drug_user_id,a.virtual_doctor_id
		UNION
		-- 会议拜访
		SELECT DISTINCT dud.drug_user_id userId, tmad.doctor_id doctorId
		FROM t_meeting_attend_details tmad
		INNER JOIN t_meeting_data tmd ON tmad.meeting_id = tmd.id
		INNER JOIN drug_user_doctor dud ON tmd.product_id = dud.prod_id AND tmad.id = dud.doctor_id
		WHERE dud.prod_id = #{key.proId} AND dud.is_available = 1
		AND tmad.attend_start_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND dud.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY dud.drug_user_id,tmad.doctor_id
		UNION
		-- 微信
		SELECT a.drug_user_id userId, b.doctor_id doctorId FROM drug_user_doctor a
		JOIN `virtual_message` b ON a.doctor_id = b.doctor_id AND a.drug_user_id = b.drug_user_id
		WHERE a.is_available = 1 AND a.prod_id = #{key.proId}
		AND b.message_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND b.wechat_message_type NOT IN ('系统消息','撤回提醒')
		AND a.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY a.drug_user_id,b.doctor_id
		UNION
		-- 内容
		SELECT r.drug_user_id userId, r.read_person_id doctorId FROM
		t_content_product a INNER JOIN activity_read r ON r.data_id = a.content_id
		LEFT JOIN activity_read_ip i ON i.read_token = r.read_token
		WHERE a.product_id = #{key.proId} AND r.read_person_id &gt; 0 AND r.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		AND r.create_time BETWEEN #{key.startTime} AND #{key.endTime} AND (i.isp != '阿里云' OR i.isp IS NULL)
		GROUP BY r.drug_user_id, r.read_person_id
		UNION
		-- 小程序
		SELECT c.drug_user_id userId, c.doctor_id doctorId FROM
		wx_users a INNER JOIN wx_user_read b ON a.id = b.user_id
		INNER JOIN drug_user_doctor c ON c.doctor_id = a.doctor_id
		WHERE c.is_available = 1 AND c.prod_id = #{key.proId} AND b.create_time BETWEEN #{key.startTime} AND
		#{key.endTime}
		AND c.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY c.drug_user_id, c.doctor_id
		) a GROUP BY a.userId
	</select>

	<!-- type 1 接触医生数 2 成功医生数 -->
	<select id="getContactAndSuccessHcpCount" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT a.virtual_drug_user_id userId, COUNT(DISTINCT a.virtual_doctor_id) total  FROM `virtual_doctor_call_info_mend` a
		JOIN virtual_doctor_call_info_result b ON a.id = b.mend_id
		JOIN virtual_product_visit_result c ON b.result_id = c.id AND c.product_id = a.product_id
		JOIN virtual_doctor_call_info d ON d.id = a.call_id and d.visit_channel != 5
		WHERE a.product_id = #{key.proId} AND a.create_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND c.visit_type LIKE '%${type}%'
		AND a.virtual_drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY a.virtual_drug_user_id
	</select>

	<!-- 招募医生数 -->
	<select id="getRecruitHcpCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT a.drug_user_id userId, COUNT(DISTINCT a.doctor_id) total  FROM `drug_user_doctor_quate` a
		WHERE a.is_available = 1 AND a.is_recruit = 1 AND a.product_id = #{key.proId}

		<!-- 2019-06-02修改 不能查更新时间，修改别的字段，update_time 也会发生变化 -->
		<!--
		AND a.update_time BETWEEN #{key.startTime} AND #{key.endTime}
		-->

		AND a.create_time BETWEEN #{key.startTime} AND #{key.endTime}


		AND a.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY a.drug_user_id
	</select>

	<!-- 招募医生数 -->
	<!--<select id="getRecruitHcpCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT b.drug_user_id userId, COUNT(DISTINCT a.doctor_id) total  FROM `product_doctor_quate` a
		JOIN drug_user_doctor b on a.doctor_id = b.doctor_id and a.product_id = b.prod_id
		WHERE a.is_available = 1 AND a.is_recruit = 1 AND a.product_id = #{key.proId}
		AND a.create_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND b.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY b.drug_user_id
	</select>-->

	<!-- 覆盖医生 -->
	<select id="getCoverHcpCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT a.userId, COUNT(DISTINCT a.doctorId) total FROM
		(
		SELECT DISTINCT a.virtual_drug_user_id userId, a.virtual_doctor_id doctorId FROM `virtual_doctor_call_info` a
		INNER JOIN product_doctor_quate b ON a.product_id = b.product_id AND a.virtual_doctor_id = b.doctor_id
		WHERE b.is_recruit = 1 AND a.visit_channel = 1 AND a.call_time &gt;= 75 AND a.product_id = #{key.proId}
		AND a.create_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND a.virtual_drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		UNION
		SELECT DISTINCT a.drug_user_id userId, b.user_id doctorId FROM drug_user_doctor a
		JOIN `virtual_message` b ON a.doctor_id = b.doctor_id AND a.drug_user_id = b.drug_user_id
		JOIN product_doctor_quate c ON a.prod_id = c.product_id AND a.doctor_id = c.doctor_id
		WHERE c.is_recruit = 1 AND a.is_available = 1 AND a.prod_id = #{key.proId}
		AND b.message_time BETWEEN #{key.startTime} AND #{key.endTime} AND b.user_type = 2
		AND b.wechat_message_type NOT IN ('系统消息','撤回提醒')
		AND a.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		UNION
		SELECT DISTINCT c.drug_user_id userId, a.doctor_id doctorId FROM
		(
		SELECT DISTINCT b.doctor_id FROM t_meeting_data t
		JOIN t_meeting_attend_details b ON t.product_id = #{key.proId} AND t.id = b.meeting_id
		WHERE b.attend_start_time BETWEEN #{key.startTime} AND #{key.endTime}
		) a
		JOIN drug_user_doctor c ON a.doctor_id = c.doctor_id
		JOIN product_doctor_quate d on c.prod_id = d.product_id and c.doctor_id = d.doctor_id
		WHERE d.is_recruit = 1 AND c.prod_id = #{key.proId} AND c.is_available = 1 AND
		c.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		) a GROUP BY a.userId
	</select>

	<!-- 电话>=75 秒 -->
	<select id="getCallTimeMore75Count" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT a.virtual_drug_user_id userId, COUNT(DISTINCT a.virtual_doctor_id) total FROM
		`virtual_doctor_call_info` a INNER JOIN product_doctor_quate b ON
		a.product_id = b.product_id AND a.virtual_doctor_id = b.doctor_id
		WHERE b.is_recruit = 1 AND a.visit_channel = 1 AND a.call_time &gt;= 75
		AND a.product_id = #{key.proId} AND a.create_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND a.virtual_drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY a.virtual_drug_user_id
	</select>

	<!-- 微信回复数微信回复医生信息 -->
	<select id="getWeChatReplyCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT a.drug_user_id userId, COUNT(DISTINCT b.user_id) total FROM drug_user_doctor a
		JOIN `virtual_message` b ON a.doctor_id = b.doctor_id AND a.drug_user_id = b.drug_user_id
		JOIN product_doctor_quate c ON a.prod_id = c.product_id AND a.doctor_id = c.doctor_id
		WHERE c.is_recruit = 1 AND a.is_available = 1 AND a.prod_id = #{key.proId} AND b.user_type = 2
		AND b.message_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND b.wechat_message_type NOT IN ('系统消息','撤回提醒')
		AND a.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY a.drug_user_id
	</select>

	<!-- 会议覆盖参会医生数量 -->
	<select id="getAttendMeetingCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT c.drug_user_id userId, COUNT(DISTINCT a.doctor_id) total FROM
		(
		SELECT DISTINCT b.doctor_id FROM t_meeting_data a
		JOIN t_meeting_attend_details b ON a.id = b.meeting_id
		WHERE a.product_id = #{key.proId} AND b.attend_start_time BETWEEN #{key.startTime} AND #{key.endTime}
		) a
		JOIN drug_user_doctor c ON a.doctor_id = c.doctor_id
		JOIN product_doctor_quate d on c.prod_id = d.product_id and c.doctor_id = d.doctor_id
		WHERE d.is_recruit = 1 AND c.prod_id = #{key.proId} AND c.is_available = 1
		AND c.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY c.drug_user_id
	</select>

	<!-- 外呼统计——type不等于1为接通次数 、type等于1 呼出次数 -->
	<select id="getConnectCount" resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT a.virtual_drug_user_id userId, COUNT(DISTINCT a.sin_token) total FROM `virtual_doctor_call_info` a
		WHERE a.visit_channel = 1 AND a.product_id = #{key.proId}
		<if test="type == 1">
			AND a.type = 1
		</if>
		<if test="type != 1">
			AND a.status_name = 'answer'
		</if>
		AND a.create_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND a.virtual_drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY a.virtual_drug_user_id
	</select>

	<!-- 外呼统计——总时长 -->
	<select id="getOutboundTimeCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT a.virtual_drug_user_id userId, IFNULL(SUM(call_time),0) total FROM `virtual_doctor_call_info` a
		WHERE a.visit_channel = 1 AND a.product_id = #{key.proId}
		AND a.create_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND a.virtual_drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY a.virtual_drug_user_id
	</select>

	<!-- 微信聊天统计——发送人数 -->
	<select id="getWeChatSendCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT a.drug_user_id userId, COUNT(DISTINCT b.doctor_id) total FROM drug_user_doctor a
		JOIN `virtual_message` b ON a.doctor_id = b.doctor_id
		WHERE a.is_available = 1 AND b.doctor_id &gt; 0 AND a.prod_id = #{key.proId}
		AND b.message_time BETWEEN #{key.startTime} AND #{key.endTime} AND b.user_type = 1
		AND b.wechat_message_status = '发送' AND b.wechat_message_type NOT IN ('系统消息','撤回提醒')
		AND a.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY a.drug_user_id
	</select>

	<!-- 微信聊天统计——微信添加数 -->
	<select id="getWeChatAddCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT	dud.drug_user_id userId, COUNT(DISTINCT vm.doctor_id) total
		FROM virtual_message vm
		INNER JOIN drug_user_doctor dud ON vm.doctor_id = dud.doctor_id
		inner join (select min(message_time) time, doctor_id from virtual_message GROUP BY doctor_id) a on a.doctor_id = dud.doctor_id
		WHERE dud.is_available = 1 AND dud.prod_id = #{key.proId}
		AND a.time BETWEEN #{key.startTime} AND #{key.endTime}
		AND dud.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY dud.drug_user_id
	</select>

	<!-- 内容分享统计——发送次数 -->
	<select id="getContentPartSendCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT b.drug_user_id userId, COUNT(DISTINCT b.share_token) total FROM
		t_content_product a,
		(SELECT share_token, drug_user_id, data_id FROM activity_share WHERE
		drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		AND create_time BETWEEN #{key.startTime} AND #{key.endTime} ) b
		WHERE a.product_id = #{key.proId} AND a.content_id = b.data_id
		GROUP BY b.drug_user_id
	</select>

	<!-- 内容分享统计——阅读人数 总时长-->
	<select id="getContentPartTimeAndCount" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT r.drug_user_id userId, r.read_person_id doctorId, IFNULL(SUM(r.read_time),0) total FROM
		t_content_product a	INNER JOIN activity_read r ON r.data_id = a.content_id
		LEFT JOIN activity_read_ip i ON i.read_token = r.read_token
		WHERE a.product_id = #{key.proId} AND r.read_person_id &gt; 0 AND r.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		AND r.create_time BETWEEN #{key.startTime} AND #{key.endTime} AND (i.isp != '阿里云' OR i.isp IS NULL)
		GROUP BY r.drug_user_id, r.read_person_id

		UNION ALL

		SELECT c.drug_user_id userId, c.doctor_id doctorId, IFNULL(SUM(b.read_time),0) total FROM
		wx_users a INNER JOIN wx_user_read b ON a.id = b.user_id
		INNER JOIN drug_user_doctor c ON c.doctor_id = a.doctor_id
		WHERE c.is_available = 1 AND c.prod_id = #{key.proId} AND b.create_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND c.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY c.drug_user_id, c.doctor_id
	</select>

	<!-- 内容分享统计—— >=50s医生数 -->
	<select id="getContentPartMoreThen50s" parameterType="com.nuoxin.virtual.rep.api.entity.v3_0.request.VisitDataParam"
			resultType="com.nuoxin.virtual.rep.api.entity.v3_0.VisitDataPart">
		SELECT a.drug_user_id userId, COUNT(a.read_person_id) total FROM
		(
		SELECT r.drug_user_id, r.read_person_id FROM
		t_content_product a
		INNER JOIN activity_read r ON r.data_id = a.content_id
		LEFT JOIN activity_read_ip i ON i.read_token = r.read_token
		WHERE a.product_id = #{key.proId} AND r.read_person_id &gt; 0 AND r.read_time &gt;= 50
		AND r.create_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND (i.isp != '阿里云' OR i.isp IS NULL)
		AND r.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY r.drug_user_id, r.read_person_id

		UNION

		SELECT c.drug_user_id, c.doctor_id FROM
		wx_users a INNER JOIN wx_user_read b ON a.id = b.user_id
		INNER JOIN drug_user_doctor c ON c.doctor_id = a.doctor_id
		WHERE c.is_available = 1 AND c.prod_id = #{key.proId} AND b.read_time &gt;= 50 AND b.create_time BETWEEN #{key.startTime} AND #{key.endTime}
		AND c.drug_user_id IN
		<foreach collection="key.list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
		GROUP BY c.drug_user_id, c.doctor_id
		) a GROUP BY a.drug_user_id
	</select>

	<!-- 呼出次数 -->
	<!--SELECT a.product_id, a.virtual_drug_user_id, COUNT(DISTINCT a.sin_token) num FROM `virtual_doctor_call_info` a
	WHERE a.visit_channel = 1 AND type = 1 AND a.product_id = #{proId}
	AND a.create_time BETWEEN #{startTime} AND #{endTime}
	AND a.virtual_drug_user_id IN
	<foreach collection="list" item="id" open="(" separator="," close=")">
		#{id}
	</foreach>
	GROUP BY a.virtual_drug_user_id-->

	<!-- 接触医生数 -->
	<!--SELECT a.drug_user_id, COUNT(DISTINCT a.doctor_id) num  FROM `drug_user_doctor_quate` a
	JOIN drug_user_doctor_quate_result b ON a.id = b.quate_id
	JOIN virtual_product_visit_result c ON b.result_id = c.id ON c.product_id = a.product_id
	WHERE a.product_id = #{proId} AND a.create_time BETWEEN #{startTime} AND #{endTime} AND c.visit_type LIKE '%1%'
	AND a.drug_user_id IN
	<foreach collection="list" item="id" open="(" separator="," close=")">
		#{id}
	</foreach>
	GROUP BY a.drug_user_id-->

</mapper>