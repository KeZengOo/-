<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuoxin.virtual.rep.api.mybatis.DrugUserDoctorMapper">

	<insert id="saveDrugUserDoctors" keyProperty="drugUserDoctorId" useGeneratedKeys="true" parameterType="com.nuoxin.virtual.rep.api.entity.v2_5.DrugUserDoctorParams">
		INSERT INTO drug_user_doctor
		(doctor_id, doctor_name, doctor_email, 
		drug_user_id, drug_user_name, drug_user_email, prod_id, created_time)
		VALUES 
		<foreach collection ="list" item="index" separator =",">
        	(#{index.doctorId}, #{index.doctorName}, #{index.doctorEmail}, 
        	#{index.drugUserId}, #{index.drugUserName}, #{index.drugUserEmail},
        	#{index.prodId}, NOW())
    	</foreach>
	</insert>


	<update id="updateDrugUserDoctorAvailable">
		UPDATE drug_user_doctor SET is_available=0
		WHERE drug_user_id=#{drugUserId}
		<if test="doctorId !=null">
			AND doctor_id=#{doctorId}
		</if>

		AND prod_id=#{prodId}
	</update>

	
	<insert id="saveDrugUserDoctorsOneToOne">
		INSERT INTO drug_user_doctor_one_to_one 
		(drug_user_id, doctor_id, is_add_wechat,create_time)
		VALUES 
		<foreach collection ="list" item="index" separator =",">
        	(#{index.drugUserId}, #{index.doctorId}, #{index.isAddWechat}, NOW())
    	</foreach >
	</insert>


	<delete id="deleteDrugUserDoctorsOneToOne">
		DELETE FROM drug_user_doctor_one_to_one
		WHERE drug_user_id=#{drugUserId}
		AND doctor_id=#{doctorId}
	</delete>

	<select id="selectDrugUserDoctors" resultType="com.nuoxin.virtual.rep.api.entity.v2_5.StatisticsResponse">
		SELECT DISTINCT user_id AS drugUserId,t1.name AS drugUserName FROM `product_user` t JOIN drug_user t1 ON t.user_id=t1.id
		WHERE t.prod_id = #{productId} AND t1.status=1
		and t.user_id IN
		<foreach collection="drugUserIds" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>
		ORDER BY user_id
		<if test="type==1">
			LIMIT #{currentSize},#{pageSize}
		</if>
	</select>

	<select id="selectDrugUserDoctorsCount" resultType="java.lang.Integer">
		select count(DISTINCT user_id) total FROM `product_user` t JOIN drug_user t1 ON t.user_id=t1.id
		WHERE t.prod_id =#{productId}  AND t1.status=1
		and t.user_id IN
		<foreach collection="drugUserIds" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>
	</select>
	
	<select id="getProducts" resultType="com.nuoxin.virtual.rep.api.entity.v2_5.ProductBean">
		SELECT DISTINCT
			p.prod_id AS productId, prod_name AS productName 
		FROM drug_user_doctor dud 
		JOIN product_line p
			ON p.prod_id=dud.prod_id 

			WHERE dud.is_available=1
			AND dud.drug_user_id=#{virtualDrugUserId}
			AND dud.doctor_id = #{virtualDoctorId}
	</select>

	<select id="getDrugUserIdByProductId" resultType="com.nuoxin.virtual.rep.api.entity.v2_5.StatisticsResponse">
		SELECT DISTINCT user_id AS drugUserId,t1.name AS drugUserName FROM `product_user` t JOIN drug_user t1 ON t.user_id=t1.id
		WHERE t.prod_id = #{productId} AND t1.status=1 AND t1.`leader_path` LIKE #{leaderPath}
	</select>


	<!-- 添加微信的医生人数 -->
	<select id="addWechatDoctor" resultType="java.lang.Integer">
		SELECT
			COUNT(DISTINCT d.id)
		FROM
			doctor d
		INNER JOIN drug_user_doctor dud ON d.id = dud.doctor_id
		INNER JOIN drug_user du ON dud.drug_user_id = du.id
		INNER JOIN drug_user_doctor_one_to_one o
		ON dud.doctor_id=o.doctor_id AND dud.drug_user_id=o.drug_user_id
		WHERE dud.is_available=1
		AND dud.prod_id=#{productId}
		AND du.id IN
		<foreach collection="drugUserIdList" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>
		AND o.is_add_wechat=1

		<if test="startTime!=null and startTime !=''">
			AND DATE_FORMAT(o.create_time, '%Y-%m-%d') >=DATE_FORMAT(#{startTime}, '%Y-%m-%d')
		</if>

		<if test="endTime!=null and endTime !=''">
			AND DATE_FORMAT(o.create_time, '%Y-%m-%d') &lt;=DATE_FORMAT(#{endTime}, '%Y-%m-%d')
		</if>
	</select>

	<!-- 得到重复数据ID，用来删除 -->
	<select id="getAvailableDeleteIdList" resultType="java.lang.Long">
		SELECT
			dud.id
		FROM
			drug_user_doctor dud
		WHERE
			dud.is_available = #{available}
		GROUP BY
			dud.drug_user_id,
			dud.doctor_id,
			dud.prod_id
		HAVING
			COUNT(*) > 1
	</select>

	<!-- 得到要重复删除的 -->
	<select id="getRepeatDeleteIdList" resultType="java.lang.Long">
		SELECT DISTINCT
			b.id
		FROM
			( SELECT id, dud.doctor_id, dud.drug_user_id, dud.prod_id, is_available FROM drug_user_doctor dud WHERE dud.is_available = 1 ) a
			INNER JOIN ( SELECT id, dud.doctor_id, dud.prod_id, is_available FROM drug_user_doctor dud WHERE dud.is_available = 0 ) b ON
			a.doctor_id = b.doctor_id
			AND a.prod_id = b.prod_id
	</select>

	<delete id="deleteByIdList">
		DELETE FROM drug_user_doctor
		WHERE id IN
		<foreach collection="list" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>

</mapper>