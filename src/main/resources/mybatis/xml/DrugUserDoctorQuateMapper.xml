<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuoxin.virtual.rep.api.mybatis.DrugUserDoctorQuateMapper">
	<insert id="backupRelationShipInfo">
		INSERT INTO drug_user_doctor_quate_log 
		(drug_user_id,doctor_id,product_id, is_has_drug,is_target,
		is_has_ae,is_recruit, is_break_off, hcp_potential)
		
		SELECT drug_user_id,doctor_id,product_id, is_has_drug,is_target,
		is_has_ae, is_recruit, is_break_off, hcp_potential
		FROM drug_user_doctor_quate
		WHERE  
			drug_user_id = #{virtualDrugUserId} 
			AND doctor_id =  #{doctorId} 
			AND product_id = #{productLineId}
	</insert>	
	
	<!-- 使用 MYSQL 私有语法, 通过 drug_user_id, doctor_id, product_id 创建唯一约束 -->
	<insert id="replaceRelationShipInfo" keyProperty="id" useGeneratedKeys="true"
			parameterType="com.nuoxin.virtual.rep.api.entity.v2_5.DrugUserDoctorQuateParams">
		REPLACE INTO drug_user_doctor_quate 
		(drug_user_id,doctor_id,product_id, is_has_drug,is_target,is_recruit,is_cover,
		is_has_ae, is_break_off, hcp_potential, attitude)
		VALUE (#{virtualDrugUserId}, #{doctorId}, #{productLineId}, #{isHasDrug}, #{isTarget}, #{isRecruit},#{isCover},
		#{isHasAe}, #{isBreakOff}, #{hcpPotential}, #{attitude})
	</insert>



	<!-- 使用 MYSQL 私有语法, 通过  doctor_id, product_id 创建唯一约束 -->
	<insert id="replaceProductDoctorRelationShipInfo" keyProperty="quateId" useGeneratedKeys="true"
			parameterType="com.nuoxin.virtual.rep.api.entity.v2_5.DrugUserDoctorQuateParams">
		REPLACE INTO product_doctor_quate
		(doctor_id,product_id, is_has_drug,is_target,is_recruit,is_cover,
		is_has_ae, is_break_off, hcp_potential, attitude)
		VALUE (#{doctorId}, #{productLineId}, #{isHasDrug}, #{isTarget}, #{isRecruit},#{isCover},
		#{isHasAe}, #{isBreakOff}, #{hcpPotential}, #{attitude})
	</insert>

	
	<insert id="saveDrugUserDoctorQuates" parameterType="com.nuoxin.virtual.rep.api.entity.v2_5.DrugUserDoctorQuateParams">
		INSERT INTO drug_user_doctor_quate 
		(drug_user_id,doctor_id,product_id, is_has_drug,
		 is_target,is_has_ae, is_recruit,is_cover, hcp_potential, attitude)
		VALUES
		<foreach collection ="list" item="index" separator =",">
			 (#{index.virtualDrugUserId}, #{index.doctorId}, #{index.productLineId}, #{index.isHasDrug}, 
			 #{index.isTarget}, #{index.isHasAe}, #{index.isRecruit},#{index.isCover}, #{index.hcpPotential}, #{index.attitude})
		</foreach>
	</insert>


	<insert id="saveProductDoctorQuates" parameterType="com.nuoxin.virtual.rep.api.entity.v2_5.DrugUserDoctorQuateParams">
		INSERT INTO product_doctor_quate
		(doctor_id,product_id, is_has_drug,
		is_target,is_has_ae, is_recruit,is_cover, hcp_potential, attitude)
		VALUES
		<foreach collection ="list" item="index" separator =",">
			(#{index.doctorId}, #{index.productLineId}, #{index.isHasDrug},
			#{index.isTarget}, #{index.isHasAe}, #{index.isRecruit},#{index.isCover}, #{index.hcpPotential}, #{index.attitude})
		</foreach>
	</insert>



	<delete id="deleteDrugUserDoctorQuates">
		DELETE FROM drug_user_doctor_quate
		WHERE drug_user_id=#{drugUserId}
		AND doctor_id=#{doctorId}
		AND product_id=#{productId}
	</delete>


	<delete id="deleteProductDoctorQuates">
		DELETE FROM product_doctor_quate
		WHERE
		doctor_id=#{doctorId}
		AND product_id=#{productId}
	</delete>


	<select id="getPotentialDoctorCount" resultType="com.nuoxin.virtual.rep.api.entity.v2_5.StatisticsDrugNumResponse">
		<!-- 2018-09-29 重构前
		SELECT
		drug_user_id drugUserId,count(DISTINCT doctor_id) total
		FROM drug_user_doctor_quate
		WHERE
		drug_user_id IN
		<foreach collection="statisticsParams.drugUserIds" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>
		<if test="statisticsParams.startTime!=null">
			and date_format(create_time,'%Y-%m-%d')&gt;=#{statisticsParams.startTime}
		</if>
		<if test="statisticsParams.endTime!=null">
			and date_format(create_time,'%Y-%m-%d')&lt;=#{statisticsParams.endTime}
		</if>
		AND product_id=#{statisticsParams.productId} and is_available=1 and hcp_potential=#{hcpPotential}
		GROUP BY drug_user_id

		 -->

		<!-- 2018-09-29 重构后 -->
		SELECT
		call_dud.drugUserId,
		COUNT(
		DISTINCT vdci.doctor_id
		) total
		FROM
		drug_user_doctor_quate vdci
		INNER JOIN (
		SELECT DISTINCT
		d.id doctorId,
		du.id drugUserId
		FROM
		doctor d
		INNER JOIN drug_user_doctor dud ON d.id = dud.doctor_id
		INNER JOIN drug_user du ON dud.drug_user_id = du.id
		WHERE
		dud.is_available = 1
		AND dud.prod_id = #{statisticsParams.productId}
		AND du.id IN

		<foreach collection="statisticsParams.drugUserIds" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>

		) call_dud ON vdci.doctor_id = call_dud.doctorId
		WHERE
		vdci.product_id = #{statisticsParams.productId}

		<if test="statisticsParams.startTime!=null and statisticsParams.startTime!=''">
			and date_format(vdci.create_time,'%Y-%m-%d') &gt;=#{statisticsParams.startTime}
		</if>
		<if test="statisticsParams.endTime!=null and statisticsParams.endTime!=''">
			and date_format(vdci.create_time,'%Y-%m-%d') &lt;=#{statisticsParams.endTime}
		</if>
		and vdci.is_available=1 and vdci.hcp_potential=#{hcpPotential}
		GROUP BY
		call_dud.drugUserId


	</select>

	<!-- 医生的产品信息，每个医生只取两条 -->
	<select id="getProductInfoList" resultType="com.nuoxin.virtual.rep.api.web.controller.response.v2_5.ProductInfoResponse">
		SELECT
		DISTINCT
			a.prod_name productName,
			qudq.is_recruit isRecruit,
			qudq.hcp_potential doctorPotential,
			dv.client_level doctorLevel,
			qudq.is_has_drug isHasDrug
		FROM
			(
				SELECT DISTINCT
					pl.prod_id,
					pl.prod_name
				FROM
					drug_user du
				INNER JOIN drug_user_doctor dud ON du.id = dud.drug_user_id
				INNER JOIN product_line pl ON dud.prod_id = pl.prod_id
				WHERE
					dud.is_available = 1
				AND dud.doctor_id = #{doctorId}
				AND du.leader_path LIKE #{leaderPath}
				LIMIT 2
			) a
		LEFT JOIN drug_user_doctor_quate qudq ON a.prod_id = qudq.product_id
		AND qudq.doctor_id = #{doctorId}
		LEFT JOIN doctor_virtual dv ON a.prod_id = dv.product_id
		AND dv.doctor_id = #{doctorId}
	</select>



	<!-- 医生的产品信息，每个医生只取两条 -->
	<select id="getProductInfoListByProductIdList" resultType="com.nuoxin.virtual.rep.api.web.controller.response.v2_5.ProductInfoResponse">

		SELECT DISTINCT
		a.prod_name productName,
		qudq.is_recruit isRecruit,
		qudq.hcp_potential doctorPotential,
		qudq.is_has_drug isHasDrug,
		qudq.create_time
		FROM
		product_line a
		INNER JOIN drug_user_doctor dud ON a.prod_id = dud.prod_id
		AND dud.is_available = 1
		AND dud.doctor_id = #{doctorId}
		LEFT JOIN (
		SELECT
		*
		FROM
		drug_user_doctor_quate
		WHERE
		id IN (
		SELECT
		max(id)
		FROM
		drug_user_doctor_quate
		WHERE
		doctor_id = #{doctorId}
		AND product_id IN

		<foreach item="id" index="index" collection="productIdList"
				 open="(" separator="," close=")">
			#{id}
		</foreach>

		GROUP BY
		product_id
		)
		) qudq ON a.prod_id = qudq.product_id
		WHERE
		dud.prod_id IN

		<foreach item="id" index="index" collection="productIdList"
				 open="(" separator="," close=")">
			#{id}
		</foreach>

		LIMIT 2

	</select>





	<!-- 全部医生的产品信息 -->
	<select id="getAllProductInfoListByProductIdList" resultType="com.nuoxin.virtual.rep.api.web.controller.response.v2_5.ProductInfoResponse">

		<!--
		SELECT
			tt.prod_id productId,
			tt.prod_name productName,
			tt.doctor_id doctorId,
			qu.is_recruit isRecruit,
			qu.hcp_potential doctorPotential,
			qu.is_has_drug isHasDrug,
			qu.create_time
		FROM
			drug_user_doctor_quate qu
		INNER JOIN (
			SELECT
				t.doctor_id,
				t.prod_name,
				t.prod_id,
				max(q.id) quateId
			FROM
				drug_user_doctor_quate q
			INNER JOIN (
				SELECT
					dud.doctor_id,
					dud.prod_id,
					pl.prod_name
				FROM
					drug_user_doctor dud
				INNER JOIN product_line pl ON dud.prod_id = pl.prod_id
				WHERE
					dud.is_available = 1
				AND dud.doctor_id
				IN

		<foreach item="doctorId" index="index" collection="doctorIdList"
				 open="(" separator="," close=")">
			#{doctorId}
		</foreach>

				AND dud.prod_id IN
			<foreach item="id" index="index" collection="productIdList"
					 open="(" separator="," close=")">
				#{id}
			</foreach>


			GROUP BY
						dud.prod_id,
						dud.doctor_id
				) t ON q.doctor_id = t.doctor_id
				AND q.product_id = t.prod_id
				GROUP BY
					q.doctor_id,
					q.product_id
			) tt ON qu.id = tt.quateId
		-->






		SELECT
		qq.productId,
		qq.productName,
		q.doctor_id doctorId,
		q.is_recruit isRecruit,
		q.hcp_potential doctorPotential,
		q.is_has_drug isHasDrug,
		q.create_time
		FROM
		drug_user_doctor_quate q
		INNER JOIN (
		SELECT
		doctor_id,
		max(id) maxId,
		pl.prod_id productId,
		pl.prod_name productName
		FROM
		drug_user_doctor_quate q
		INNER JOIN product_line pl ON q.product_id = pl.prod_id
		WHERE
		product_id IN
		<foreach item="id" index="index" collection="productIdList"
				 open="(" separator="," close=")">
			#{id}
		</foreach>

		AND doctor_id
		IN

		<foreach item="doctorId" index="index" collection="doctorIdList"
				 open="(" separator="," close=")">
			#{doctorId}
		</foreach>

		GROUP BY
		doctor_id
		) qq ON q.id = qq.maxId


	</select>




	<select id="getQuateCount" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM drug_user_doctor_quate WHERE doctor_id=#{doctorId}
		<if test="drugUserId !=null and drugUserId!=0">
			AND drug_user_id=#{drugUserId}
		</if>
		AND product_id=#{productId}
		AND is_available=1
	</select>



	<select id="getProductQuateCount" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM product_doctor_quate WHERE doctor_id=#{doctorId}
		AND product_id=#{productId}
	</select>


	<!-- 根据产品ID得到招募结果 -->
	<select id="getProductRecruit" resultType="java.lang.Integer">
		SELECT is_recruit FROM drug_user_doctor_quate
		WHERE product_id=#{productId}
		AND doctor_id=#{doctorId}
		AND is_available=1
		ORDER BY create_time DESC LIMIT 1
	</select>

	<!-- 得到成功招募的医生ID列表 -->
	<select id="getRecruitDoctorIdList" resultType="java.lang.Long">
		SELECT DISTINCT
			q.doctor_id
		FROM
			drug_user_doctor_quate q
		INNER JOIN (
			SELECT DISTINCT
				d.id doctorId
			FROM
				doctor d
			INNER JOIN drug_user_doctor dud ON d.id = dud.doctor_id
			INNER JOIN drug_user du ON dud.drug_user_id = du.id
			WHERE
				dud.is_available = 1
			AND dud.prod_id = #{productId}

			AND dud.drug_user_id IN

			<foreach collection="drugUserIds" item="drugUserId" open="(" close=")" separator=",">
				#{drugUserId}
			</foreach>

		) dud ON q.doctor_id = dud.doctorId
		WHERE
			q.product_id = #{productId}
		AND q.is_recruit = 1

		<if test="startTime!=null and startTime!=''">
			AND DATE_FORMAT(q.create_time, '%Y-%m-%d') &gt;= #{startTime}
		</if>

		<if test="endTime!=null and endTime!=''">
			AND DATE_FORMAT(q.create_time, '%Y-%m-%d') &lt;= #{endTime}
		</if>

		<if test="self!=null and self==1">
			AND q.drug_user_id IN
			<foreach collection="drugUserIds" item="drugUserId" open="(" close=")" separator=",">
				#{drugUserId}
			</foreach>
		</if>

	</select>



	<!-- 招募医生数 -->
	<select id="getRecruitDoctor" resultType="java.lang.Integer">
		SELECT
			COUNT(DISTINCT d.id)
		FROM
			doctor d
		INNER JOIN drug_user_doctor dud ON d.id = dud.doctor_id
		INNER JOIN drug_user du ON dud.drug_user_id = du.id
		INNER JOIN drug_user_doctor_quate q ON d.id = q.doctor_id
		AND q.product_id = #{productId}
		WHERE
			dud.is_available = 1
		AND dud.prod_id = #{productId}
		AND q.is_recruit = 1
		AND du.id IN
		<foreach collection="drugUserIdList" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>

		AND q.drug_user_id IN
		<foreach collection="drugUserIdList" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>


		<if test="startTime!=null and startTime !=''">
			AND DATE_FORMAT(q.create_time, '%Y-%m-%d') >=DATE_FORMAT(#{startTime}, '%Y-%m-%d')
		</if>

		<if test="endTime!=null and endTime !=''">
			AND DATE_FORMAT(q.create_time, '%Y-%m-%d') &lt;=DATE_FORMAT(#{endTime}, '%Y-%m-%d')
		</if>

	</select>

	<!-- 招募医院数量 -->
	<select id="getRecruitHospital" resultType="java.lang.Integer">
		SELECT
			COUNT(DISTINCT h.id)
		FROM
			doctor d
		INNER JOIN hospital h
		ON d.hospital_id=h.id
		INNER JOIN drug_user_doctor dud ON d.id = dud.doctor_id
		INNER JOIN drug_user du ON dud.drug_user_id = du.id
		INNER JOIN drug_user_doctor_quate q ON d.id = q.doctor_id
		AND q.product_id = #{productId}
		WHERE
			dud.is_available = 1
		AND dud.prod_id = #{productId}
		AND q.is_recruit = 1
		AND du.id IN
		<foreach collection="drugUserIdList" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>

		AND q.drug_user_id IN
		<foreach collection="drugUserIdList" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>

		<if test="startTime!=null and startTime !=''">
			AND DATE_FORMAT(q.create_time, '%Y-%m-%d') >=DATE_FORMAT(#{startTime}, '%Y-%m-%d')
		</if>

		<if test="endTime!=null and endTime !=''">
			AND DATE_FORMAT(q.create_time, '%Y-%m-%d') &lt;=DATE_FORMAT(#{endTime}, '%Y-%m-%d')
		</if>
	</select>
	

	<!-- 有AE的医生数量 -->
	<select id="hasAeDoctor" resultType="java.lang.Integer">
		SELECT
			COUNT(DISTINCT d.id)
		FROM
			doctor d
		INNER JOIN drug_user_doctor dud ON d.id = dud.doctor_id
		INNER JOIN drug_user du ON dud.drug_user_id = du.id
		INNER JOIN drug_user_doctor_quate q
		ON d.id=q.doctor_id
		WHERE
			dud.is_available = 1
		AND dud.prod_id = #{productId}
		AND du.id IN
		<foreach collection="drugUserIdList" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>
		AND q.product_id=#{productId}
		AND q.drug_user_id IN
		<foreach collection="drugUserIdList" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>
		AND q.is_has_ae=1

		<if test="startTime!=null and startTime !=''">
			AND DATE_FORMAT(q.create_time, '%Y-%m-%d') >=DATE_FORMAT(#{startTime}, '%Y-%m-%d')
		</if>

		<if test="endTime!=null and endTime !=''">
			AND DATE_FORMAT(q.create_time, '%Y-%m-%d') &lt;=DATE_FORMAT(#{endTime}, '%Y-%m-%d')
		</if>

	</select>

	<!-- 退出项目的医院数量 -->
	<select id="breakOffHospital" resultType="java.lang.Integer">
		SELECT
			COUNT(DISTINCT hospital_id)
		FROM
			(
				SELECT
					COUNT(DISTINCT d.id) breakOffDoctor,
					d.hospital_id,
					(
						SELECT
							COUNT(DISTINCT dd.id)
						FROM
							doctor dd
						INNER JOIN drug_user_doctor dud ON dd.id = dud.doctor_id
						INNER JOIN drug_user du ON dud.drug_user_id = du.id
						INNER JOIN drug_user_doctor_quate q ON dud.drug_user_id = q.drug_user_id
						AND dud.doctor_id = q.doctor_id
						AND dud.prod_id = q.product_id
						WHERE
							dud.is_available = 1
						AND du.id IN
						<foreach collection="drugUserIdList" item="drugUserId" open="(" close=")" separator=",">
							#{drugUserId}
						</foreach>
						AND dud.prod_id = #{productId}
						AND dd.hospital_id = d.hospital_id
					) allCount
				FROM
					doctor d
				INNER JOIN drug_user_doctor dud ON d.id = dud.doctor_id
				INNER JOIN drug_user du ON dud.drug_user_id = du.id
				INNER JOIN drug_user_doctor_quate q ON dud.drug_user_id = q.drug_user_id
				AND dud.doctor_id = q.doctor_id
				AND dud.prod_id = q.product_id
				WHERE
					dud.is_available = 1
				AND du.id IN
				<foreach collection="drugUserIdList" item="drugUserId" open="(" close=")" separator=",">
					#{drugUserId}
				</foreach>
				AND dud.prod_id = #{productId}
				AND q.is_recruit = 2

				<if test="startTime!=null and startTime !=''">
					AND DATE_FORMAT(q.create_time, '%Y-%m-%d') >=DATE_FORMAT(#{startTime}, '%Y-%m-%d')
				</if>

				<if test="endTime!=null and endTime !=''">
					AND DATE_FORMAT(q.create_time, '%Y-%m-%d') &lt;=DATE_FORMAT(#{endTime}, '%Y-%m-%d')
				</if>
				GROUP BY
					d.hospital_id
			) t
		WHERE
			breakOffDoctor >= allCount

	</select>


	<!-- 退出项目的医生数量 -->
	<select id="breakOffDoctor" resultType="java.lang.Integer">
			SELECT
			COUNT(DISTINCT d.id)
		FROM
			doctor d
		INNER JOIN drug_user_doctor dud ON d.id = dud.doctor_id
		INNER JOIN drug_user du ON dud.drug_user_id = du.id
		INNER JOIN drug_user_doctor_quate q ON dud.drug_user_id = q.drug_user_id
		AND dud.doctor_id = q.doctor_id
		AND dud.prod_id = q.product_id
		WHERE
			dud.is_available = 1
		AND du.id IN
		<foreach collection="drugUserIdList" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>
		AND dud.prod_id = #{productId}
		AND q.is_recruit = 2
		<if test="startTime!=null and startTime !=''">
			AND DATE_FORMAT(q.create_time, '%Y-%m-%d') >=DATE_FORMAT(#{startTime}, '%Y-%m-%d')
		</if>

		<if test="endTime!=null and endTime !=''">
			AND DATE_FORMAT(q.create_time, '%Y-%m-%d') &lt;=DATE_FORMAT(#{endTime}, '%Y-%m-%d')
		</if>
	</select>


</mapper>