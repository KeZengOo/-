<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuoxin.virtual.rep.api.mybatis.DrugUserDoctorQuateMapper">
	<insert id="backupRelationShipInfo">
		INSERT INTO drug_user_doctor_quate_log 
		(drug_user_id,doctor_id,product_id, is_has_drug,is_target,
		is_has_ae,is_recruit, is_break_off, hcp_potential)
		
		SELECT drug_user_id,doctor_id,product_id, is_has_drug,is_target,
		is_has_ae, is_recruit, is_break_off, hcp_potential
		FROM drug_user_doctor_quate
		WHERE  
			drug_user_id = #{virtualDrugUserId} 
			AND doctor_id =  #{doctorId} 
			AND product_id = #{productLineId}
	</insert>	
	
	<!-- 使用 MYSQL 私有语法, 通过 drug_user_id, doctor_id, product_id 创建唯一约束 -->
	<insert id="replaceRelationShipInfo">
		REPLACE INTO drug_user_doctor_quate 
		(drug_user_id,doctor_id,product_id, is_has_drug,is_target,
		is_has_ae, is_break_off, hcp_potential)
		VALUE (#{virtualDrugUserId}, #{doctorId}, #{productLineId}, #{isHasDrug}, #{isTarget}, 
		#{isHasAe}, #{isBreakOff}, #{hcpPotential})
	</insert>
	
	<insert id="saveDrugUserDoctorQuates" parameterType="com.nuoxin.virtual.rep.api.entity.v2_5.DrugUserDoctorQuateParams">
		INSERT INTO drug_user_doctor_quate 
		(drug_user_id,doctor_id,product_id, is_has_drug,
		 is_target,is_has_ae, is_recruit, hcp_potential)
		VALUES
		<foreach collection ="list" item="index" separator =",">
			 (#{index.virtualDrugUserId}, #{index.doctorId}, #{index.productLineId}, #{index.isHasDrug}, 
			 #{index.isTarget}, #{index.isHasAe}, #{index.isRecruit}, #{index.hcpPotential})
		</foreach>
	</insert>

	<select id="getPotentialDoctorCount" resultType="com.nuoxin.virtual.rep.api.entity.v2_5.StatisticsDrugNumResponse">
		SELECT
		drug_user_id drugUserId,count(DISTINCT doctor_id) total
		FROM drug_user_doctor_quate
		WHERE
		drug_user_id IN
		<foreach collection="statisticsParams.drugUserIds" item="drugUserId" open="(" close=")" separator=",">
			#{drugUserId}
		</foreach>
		<if test="statisticsParams.startTime!=null">
			and date_format(create_time,'%Y-%m-%d')&gt;=#{statisticsParams.startTime}
		</if>
		<if test="statisticsParams.endTime!=null">
			and date_format(create_time,'%Y-%m-%d')&lt;=#{statisticsParams.endTime}
		</if>
		AND product_id=#{statisticsParams.productId} and is_available=1 and hcp_potential=#{hcpPotential}
		GROUP BY drug_user_id
	</select>

	<!-- 医生的产品信息，每个医生只取两条 -->
	<select id="getProductInfoList" resultType="com.nuoxin.virtual.rep.api.web.controller.response.v2_5.ProductInfoResponse">
		SELECT
			a.prod_name productName,
			qudq.is_recruit isRecruit,
			qudq.hcp_potential doctorPotential,
			dv.client_level doctorLevel,
			qudq.is_has_drug isHasDrug
		FROM
			(
				SELECT DISTINCT
					pl.prod_id,
					pl.prod_name
				FROM
					drug_user du
				INNER JOIN drug_user_doctor dud ON du.id = dud.drug_user_id
				INNER JOIN product_line pl ON dud.prod_id = pl.prod_id
				WHERE
					dud.is_available = 1
				AND dud.doctor_id = #{doctorId}
				AND du.leader_path LIKE #{leaderPath}
				LIMIT 2
			) a
		LEFT JOIN drug_user_doctor_quate qudq ON a.prod_id = qudq.product_id
		AND qudq.doctor_id = #{doctorId}
		LEFT JOIN doctor_virtual dv ON a.prod_id = dv.product_id
		AND dv.doctor_id = #{doctorId}
	</select>
		
</mapper>